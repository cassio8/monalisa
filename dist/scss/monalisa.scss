// GRID
// ============================================================================

$grid-columns: 12 !default;
$grid-gutter:  2% !default;



// BREAKPOINTS
// ============================================================================

$xs: 480px !default;
$sm: 768px !default;
$md: 992px !default;
$lg: 1200px !default;



// SIZES
// ============================================================================

$height-input: 40px !default;



// COLORS
// ============================================================================

// Texts
$color-text:                  #313439 !default;
$color-headings:              #0d0d0e !default;

// Links
$color-link:                  #3498db !default;
$color-link-hover:            #2980b9 !default;

// Buttons
$color-button-primary:        #1c86f2 !default;
$color-button-primary-text:   #ffffff !default;
$color-button-secondary:      #313439 !default;
$color-button-secondary-text: #ffffff !default;

// States
$color-error:                 #e74c3c !default;
$color-success:               #2ecc71 !default;
$color-warning:               #f7ca18 !default;
$color-focus:                 #3498db !default;



// FONT
// ============================================================================

// Font families
$font-family:           Arial, sans-serif !default;
$font-family-monospace: Consolas, Monaco, 'Courier New', monospace !default;
$font-family-headings:  $font-family !default;
$font-family-buttons:   $font-family !default;
$font-family-input:     $font-family !default;

// Texts sizes
$font-size:        16px !default;
$font-size-small:  $font-size - 2px !default;

// Headings sizes
$font-size-h1:     48px !default;
$font-size-h2:     36px !default;
$font-size-h3:     24px !default;
$font-size-h4:     21px !default;
$font-size-h5:     18px !default;
$font-size-h6:     16px !default;

// Others sizes
$font-size-table:  $font-size-small !default;
$font-size-input:  $font-size-small !default;
$font-size-button: $font-size-small !default;

// Weight
$font-weight-button: bold !default;



// BASELINES
// ============================================================================

$base-line:         1.5 !default;
$base-line-heading: 1 !default;
$base-line-table:   $base-line !default;
$base-line-button:  $height-input !default;



// MARGINS
// ============================================================================

$margin-bottom:         $font-size * $base-line !default;
$margin-bottom-heading: $margin-bottom !default;



// PADDINGS
// ============================================================================

$padding-tb-table:    1rem !default;
$padding-rl-table:    1rem !default;
$padding-rl-input:    12px !default;
$padding-tb-textarea: 8px !default;
$padding-rl-button:   20px !default;



// BORDERS
// ============================================================================

$border-table:         1px solid rgba(0, 0, 0, .05) !default;
$border-width-input:   1px !default;
$border-color-input:   #d4d4d4 !default;
$border-radius-input:  3px !default;
$border-radius-button: 3px !default;



// BACKGROUNDS
// ============================================================================

$background-color-table-striped: #f8f8f8 !default;
$background-color-input:         #fff !default;



// BOX SHADOWS
// ============================================================================

$box-shadow-input:               none !default;
$box-shadow-input-focus:         0 0 1px $color-focus inset !default;
$box-shadow-input-focus-error:   0 0 1px $color-error inset !default;
$box-shadow-input-focus-success: 0 0 1px $color-success inset !default;




@mixin breakpoint($min: 0, $max: 0) {

    $type: type-of($min);

    @if $type == string
    {
        @if $min == sm
        {
            @media (max-width: $sm) { @content; }
        }
        @else if $min == md
        {
            @media (min-width: $sm) and (max-width: $md) { @content; }
        }
        @else if $min == lg
        {
            @media (min-width: $lg) { @content; }
        }
    }
    @else if $type == number
    {
        $query: "all" !default;
        @if $min != 0 and $max != 0 { $query: "(min-width: #{$min}) and (max-width: #{$max})"; }
        @else if $min != 0 and $max == 0 { $query: "(min-width: #{$min})"; }
        @else if $min == 0 and $max != 0 { $query: "(max-width: #{$max})"; }
        @media #{$query} { @content; }
    }
}
@mixin button($color-text, $color-back)
{
    background-color: $color-back;
    color: $color-text;

    &:hover {
        background-color: lighten($color-back, 20%);
        color: $color-text;
    }
    &:disabled,
    &._disabled {
        background-color: rgba($color-back, .7);
        color: rgba($color-text, .7);
    }
    &._outline {
        border-color: $color-back;
        background: none;
        color: $color-back;

        &:hover {
            border-color: rgba($color-back, .5);
            color: rgba($color-back, .6);
        }
        &:disabled,
        &._disabled {
            border-color: rgba($color-back, .5);
            background: none;
            color: rgba($color-back, .7);
        }
    }
}
// display
@mixin flex {
	display: flex;
}

// basis
@mixin flex-basis($width) {
	flex-basis: $width;
}

// items wrap
@mixin flex-items-wrap {
	flex-wrap: wrap;
}

// items nowrap
@mixin flex-items-nowrap {
	flex-wrap: nowrap;
}

// items row
@mixin flex-items-row {
    flex-direction: row;
}

// items columns
@mixin flex-items-column {
    flex-direction: column;
}

// items left
@mixin flex-items-left {
    justify-content: flex-start;
}

// items right
@mixin flex-items-right {
    justify-content: flex-end;
}

// items center
@mixin flex-items-center {
	justify-content: center;
}

// items between
@mixin flex-items-space-between {
	justify-content: space-between;
}

// items around
@mixin flex-items-space-around {
	justify-content: space-around;
}

// items vertical top
@mixin flex-items-top {
    align-items: flex-start;
}

// items vertical middle
@mixin flex-items-middle {
	align-items: center;
}

// items vertical bottom
@mixin flex-items-bottom {
    align-items: flex-end;
}

// item grow
@mixin flex-item-grow($grow: 0) {
    flex-grow: $grow;
}


// item auto
@mixin flex-item-auto {
    flex: auto;
}

// item one
@mixin flex-item-one {
    flex: 1;
}

// item shrink
@mixin flex-item-shrink($num: 0) {
	flex-shrink: $num;
}

// item width
@mixin flex-item-width($width) {
	flex: 0 0 $width;

	@include breakpoint(sm) {
        flex: 0 0 100% !important;
    }
}
// vertical
@mixin gradient-vertical($start: #555, $end: #333) {
	background-color: $start;
	background-image: linear-gradient(to bottom, $start 0%, $end 100%);
}

// vertical to opacity
@mixin gradient-vertical-to-opacity($color, $opacity: 0) {
	$rgba: rgba(red($color), green($color), blue($color), $opacity);
	background: linear-gradient(to bottom, $color 0%, $rgba 100%);
}

// horizontal
@mixin gradient-horizontal($start: #555, $end: #333) {
    background-color: $start;
    background: linear-gradient(to right, $start 0%, $end 100%);
}

// horizontal to opacity
@mixin gradient-horizontal-to-opacity($color: #555, $opacity: 0) {
    $rgba: rgba(red($color), green($color), blue($color), $opacity);
    background: linear-gradient(to right, $color 0%, $rgba 100%);
}

// radial
@mixin gradient-radial($inner: #555, $outer: #333) {
	background-image: radial-gradient(circle, $inner, $outer);
}
// Make Row
@mixin grid-row {
    @include flex;
    @include flex-items-row;
    @include flex-items-wrap;

    @include breakpoint(sm) {
        @include flex-items-column;
        @include flex-items-nowrap;
    }
}

// Generate Columns
@mixin generate-grid-columns {

    @for $i from 1 through $grid-columns
    {
        ._col-#{$i} {
            width: 100% / $grid-columns * $i;
        }
        ._offset-#{$i} {
            $width: 100% / $grid-columns * $i;
            margin-left: $width;
        }

    }

    &._gutters {
        @for $i from 1 through $grid-columns
        {
            & > ._col-#{$i} {
                $width: 100% / $grid-columns * $i;
                width: calc(#{$width} - #{$grid-gutter});
            }
            & > ._offset-#{$i} {
                $width: 100% / $grid-columns * $i;
                margin-left: calc(#{$width} + #{$grid-gutter}) !important;
            }
        }
    }
}


// Grid Media Columns
@mixin grid-media-columns($num) {

	-webkit-column-count: $num;
	-moz-column-count: $num;
	column-count: $num;

	-webkit-column-gap: $grid-gutter;
	-moz-column-gap: $grid-gutter;
	column-gap: $grid-gutter;

	& > div {
		display: inline-block;
		width: 100%;
	}

    @include breakpoint(sm) {
		-webkit-column-count: 1;
		-moz-column-count: 1;
		column-count: 1;
    }
}
@mixin reset()
{
    width: auto;
    height: auto;
    margin: 0;
    padding: 0;
    border: none;
    border-radius: 0;
    background: transparent;
    color: inherit;
    font: inherit;
    font-size: 100%;

    &:hover {
        width: auto;
        height: auto;
        margin: 0;
        padding: 0;
        border: none;
        border-radius: 0;
        background: transparent;
        color: inherit;
        font: inherit;
        font-size: 100%;
    }
}
// Strip unit
@function strip-unit($number) {
    @if type-of($number) == 'number' and not unitless($number) {
        @return $number / ($number * 0 + 1);
    }

    @return $number;
}

// Logo
@mixin logo($url, $w, $h) {
    display: block;
    width: #{strip-unit($w)}px;
    background: transparent url($url) no-repeat center center;
    background-size: contain;
    font-size: 1px;
    text-indent: -9999px;
    overflow: hidden;

    &:after {
        content: '';
        display: block;
        padding-top: #{(strip-unit($h)/strip-unit($w))*100%};
    }
}

// Clearfix
@mixin clearfix {
    &:after {
        content: '';
        display: table;
        clear: both;
    }
}

// Vertical align
@mixin vertical-align($position: absolute) {
    position: $position;
    top: 50%;
    transform: perspective(1px) translateY(-50%);
}

// Transition
@mixin transition($transition: all linear .2s) {
    -moz-transition: $transition;
    transition: $transition;
}

// transform
@mixin transform($transforms) {
    -moz-transform: $transforms;
    -ms-transform: $transforms;
    -webkit-transform: $transforms;
    transform: $transforms;
}

// blur
@mixin blur($radius) {
    -webkit-filter: blur($radius);
    -moz-filter: blur($radius);
    -ms-filter: blur($radius);
    filter: blur($radius);
}

// striped
@mixin striped($color: rgba(255, 255, 255, .2), $angle: 45deg) {
    background-image: -webkit-linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);
    background-image: -o-linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);
    background-image: linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);
}

// animation
@mixin animation($animation) {
    -webkit-animation: $animation;
    -moz-animation: $animation;
    animation: $animation;
}


// Retina Images
@mixin retina-background-image($file, $type, $width:  auto, $height:  auto) {

    background-repeat: no-repeat;
    background-image: url($file + '.' + $type);

    @media
      only screen and (-webkit-min-device-pixel-ratio: 2),
      only screen and (min--moz-device-pixel-ratio: 2),
      only screen and (-o-min-device-pixel-ratio: 2/1),
      only screen and (min-device-pixel-ratio: 2),
      only screen and (min-resolution: 192dpi),
      only screen and (min-resolution: 2dppx) {
        background-image: url($file + '-2x.' + $type);
        background-size: $width $height;
    }
}
@media print {

    * {
        background: transparent !important;
        color: black !important;
        box-shadow: none !important;
        text-shadow: none !important;
    }

    a,
    a:visited {
        text-decoration: underline;
    }

    pre, blockquote {
        border: 1px solid #999;
        page-break-inside: avoid;
    }

    p, h2, h3 {
        orphans: 3;
        widows: 3;
    }

    thead { display: table-header-group; }
    tr, img { page-break-inside: avoid; }
    img { max-width: 100% !important; }
    h2, h3, h4 { page-break-after: avoid; }
    @page { margin: 0.5cm; }

}

// http://meyerweb.com/eric/tools/css/reset/
//   v2.0 | 20110126
//   License: none (public domain)

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    font: inherit;
    vertical-align: baseline;
}
// HTML5 display-role reset for older browsers
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
    display: block;
}
body {
    line-height: 1;
}
blockquote, q {
    quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
    content: '';
    content: none;
}
table {
    border-collapse: collapse;
    border-spacing: 0;
}

img { display: block; }
a img { border:none } /* Gets rid of IE's blue borders */
textarea {resize: none;}
input:focus,
select:focus,
textarea:focus,
button:focus {
    outline: none;
}


// MONALISA
* {
    outline: 0;
    -webkit-font-smoothing: antialiased;
    -webkit-overflow-scrolling: touch;
}
*,
:after,
:before{
    box-sizing: border-box;
}
html,
body {
    overflow-x: hidden;
}
html, body, div, article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
    position: relative;
}
img,
video,
audio {
    max-width: 100%;
}
img,
video {
    height: auto;
}
svg {
    max-height: 100%;
}
::-moz-focus-inner {
    border: 0;
    padding: 0;
}
input[type="radio"],
input[type="checkbox"] {
    vertical-align: middle;
    position: relative;
    bottom: 0.15rem;
    font-size: 115%;
    margin-right: 3px;
}
input[type="search"] {
    -webkit-appearance: textfield;
}
input[type="search"]::-webkit-search-decoration,
input[type="search"]::-webkit-search-cancel-button {
    -webkit-appearance: none;
}
// Base
html,
body {
    font-size: $font-size;
    line-height: $base-line;
}

body {
    background-color: transparent;
    color: $color-text;
    font-family: $font-family;
}

// Text
p {
    line-height: $base-line;
}

// Links
a {
    color: $color-link;
}

a:hover {
    color: $color-link-hover;
}

// Headings
h1, h2, h3, h4, h5, h6 {
    margin-bottom: $margin-bottom-heading;
    color: $color-headings;
    font-family: $font-family-headings;
    font-weight: bold;
    text-rendering: optimizeLegibility;
    line-height: $base-line-heading;
}

h1, ._h1 {font-size: $font-size-h1;}
h2, ._h2 {font-size: $font-size-h2;}
h3, ._h3 {font-size: $font-size-h3;}
h4, ._h4 {font-size: $font-size-h4;}
h5, ._h5 {font-size: $font-size-h5;}
h6, ._h6 {font-size: $font-size-h6;}

h1 a, ._h1 a,
h2 a, ._h2 a,
h3 a, ._h3 a,
h4 a, ._h4 a,
h5 a, ._h5 a,
h6 a, ._h6 a {
  color: inherit;
}

// Lists
ul,
ol {
    &,
    & ul,
    & ol {
        margin: 0 0 0 $margin-bottom;
    }
}

ol ol li {
    list-style-type: lower-alpha;
}
ol ol ol li {
    list-style-type: lower-roman;
}
nav {
    & ul,
    & ol {
        margin: 0;
        list-style: none;
    }
}

dl dt {
    font-weight: bold;
}
dd {
    margin-left: $margin-bottom;
}

// Block Tags
p, blockquote, hr, pre, ol, ul, dl, table, fieldset, figure, address, form {
    margin-bottom: $margin-bottom;
}

hr {
    border: none;
    border-bottom: 1px solid rgba(0, 0, 0, .1);
    margin-top: -1px;
}

blockquote {
    padding-left: 1rem;
    border-left: 4px solid rgba(0, 0, 0, .1);
    font-style: italic;
    color: rgba($color-text, .65);
    & p {
        margin-bottom: .5rem;
    }
}

// Inline
time, cite, small, figcaption {
    font-size: 87.5%;
}
cite {
    opacity: .6;
}
abbr[title], dfn[title] {
    border-bottom: 1px dotted rgba(0, 0, 0, .5);
    cursor: help;
}
var {
    font-size: $font-size;
    opacity: .6;
    font-style: normal;
}
mark, code, samp, kbd {
    position: relative;
    top: -1px;
    padding: 4px 4px 2px 4px;
    display: inline-block;
    line-height: 1;
    color: rgba($color-text, .85);
}
kbd {
    border: 1px solid rgba(0, 0, 0, .1);
}
sub,
sup {
    font-size: x-small;
    line-height: 0;
    margin-left: 1rem/4;
    position: relative;
}
sup {
    top: 0;
    vertical-align: super;
}
sub {
    bottom: 1px;
    vertical-align: sub;
}

// Preformatted
pre, code, samp, var, kbd {
    font-family: $font-family-monospace;
}
pre, code, samp, var, kbd, mark {
    font-size: 87.5%;
}
pre,
pre code {
    background: #f8f8f8;
    padding: 0;
    top: 0;
    display: block;
    line-height: $base-line;
    color: rgba($color-text, .85);
    overflow: none;
    white-space: pre-wrap;
}
pre {
    padding: 1rem;
}

// Figure
figcaption {
    opacity: .6;
}
figure figcaption {
    position: relative;
    top: -1rem/2;
}
figure pre {
    background: none;
    border: 1px solid rgba(0, 0, 0, .1);
    border-radius: 4px;
}
figure {
    & .video-container,
    & pre {
        margin-bottom: $margin-bottom/2;
    }
}

// Alignment
._tal,
._text-left {
    text-align: left;
}
._tac,
._text-center {
    text-align: center;
}
._tar,
._text-right {
    text-align: right;
}

// Modifiers
ul._unstyled {
    & {
        margin-left: 0;
    }
    &,
    & ul {
        list-style: none;
    }
}
._monospace {
   font-family: $font-family-monospace;
}
._upper {
    text-transform: uppercase;
}
._lower {
    text-transform: lowercase;
}
em, ._italic {
    font-style: italic !important;
}
strong, b, ._strong {
    font-weight: bold !important;
}
._normal {
    font-weight: normal !important;
}
._muted {
    opacity: .55;
}
a._muted {
    color: $color-text;
}
a._muted:hover {
    opacity: 1;
}
small, ._small {
    font-size: $font-size-small;
}
._end {
    margin-bottom: 0 !important;
}
._nowrap,
._nowrap td {
    white-space: nowrap;
}

// Text Columns
._columns-2,
._columns-3,
._columns-4 {
     column-gap: $margin-bottom;
}

._columns-2 {column-count: 2;}
._columns-3 {column-count: 3;}
._columns-4 {column-count: 4;}

@include breakpoint(xs) {
    ._columns-2,
    ._columns-3,
    ._columns-4 {column-count: 1;}
}


//
// animate.css -http://daneden.me/animate
// Version - 3.5.2
// Licensed under the MIT license - http://opensource.org/licenses/MIT
// Copyright (c) 2017 Daniel Eden
//

.animated {
  animation-duration: 1s;
  animation-fill-mode: both;
}

.animated.infinite {
  animation-iteration-count: infinite;
}

.animated.hinge {
  animation-duration: 2s;
}

.animated.flipOutX,
.animated.flipOutY,
.animated.bounceIn,
.animated.bounceOut {
  animation-duration: .75s;
}

@keyframes bounce {
  from, 20%, 53%, 80%, to {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
    transform: translate3d(0,0,0);
  }

  40%, 43% {
    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    transform: translate3d(0, -30px, 0);
  }

  70% {
    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    transform: translate3d(0, -15px, 0);
  }

  90% {
    transform: translate3d(0,-4px,0);
  }
}

.bounce {
  animation-name: bounce;
  transform-origin: center bottom;
}

@keyframes flash {
  from, 50%, to {
    opacity: 1;
  }

  25%, 75% {
    opacity: 0;
  }
}

.flash {
  animation-name: flash;
}

/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */

@keyframes pulse {
  from {
    transform: scale3d(1, 1, 1);
  }

  50% {
    transform: scale3d(1.05, 1.05, 1.05);
  }

  to {
    transform: scale3d(1, 1, 1);
  }
}

.pulse {
  animation-name: pulse;
}

@keyframes rubberBand {
  from {
    transform: scale3d(1, 1, 1);
  }

  30% {
    transform: scale3d(1.25, 0.75, 1);
  }

  40% {
    transform: scale3d(0.75, 1.25, 1);
  }

  50% {
    transform: scale3d(1.15, 0.85, 1);
  }

  65% {
    transform: scale3d(.95, 1.05, 1);
  }

  75% {
    transform: scale3d(1.05, .95, 1);
  }

  to {
    transform: scale3d(1, 1, 1);
  }
}

.rubberBand {
  animation-name: rubberBand;
}

@keyframes shake {
  from, to {
    transform: translate3d(0, 0, 0);
  }

  10%, 30%, 50%, 70%, 90% {
    transform: translate3d(-10px, 0, 0);
  }

  20%, 40%, 60%, 80% {
    transform: translate3d(10px, 0, 0);
  }
}

.shake {
  animation-name: shake;
}

@keyframes headShake {
  0% {
    transform: translateX(0);
  }

  6.5% {
    transform: translateX(-6px) rotateY(-9deg);
  }

  18.5% {
    transform: translateX(5px) rotateY(7deg);
  }

  31.5% {
    transform: translateX(-3px) rotateY(-5deg);
  }

  43.5% {
    transform: translateX(2px) rotateY(3deg);
  }

  50% {
    transform: translateX(0);
  }
}

.headShake {
  animation-timing-function: ease-in-out;
  animation-name: headShake;
}

@keyframes swing {
  20% {
    transform: rotate3d(0, 0, 1, 15deg);
  }

  40% {
    transform: rotate3d(0, 0, 1, -10deg);
  }

  60% {
    transform: rotate3d(0, 0, 1, 5deg);
  }

  80% {
    transform: rotate3d(0, 0, 1, -5deg);
  }

  to {
    transform: rotate3d(0, 0, 1, 0deg);
  }
}

.swing {
  transform-origin: top center;
  animation-name: swing;
}

@keyframes tada {
  from {
    transform: scale3d(1, 1, 1);
  }

  10%, 20% {
    transform: scale3d(.9, .9, .9) rotate3d(0, 0, 1, -3deg);
  }

  30%, 50%, 70%, 90% {
    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);
  }

  40%, 60%, 80% {
    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);
  }

  to {
    transform: scale3d(1, 1, 1);
  }
}

.tada {
  animation-name: tada;
}

/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */

@keyframes wobble {
  from {
    transform: none;
  }

  15% {
    transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);
  }

  30% {
    transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);
  }

  45% {
    transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);
  }

  60% {
    transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);
  }

  75% {
    transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);
  }

  to {
    transform: none;
  }
}

.wobble {
  animation-name: wobble;
}

@keyframes jello {
  from, 11.1%, to {
    transform: none;
  }

  22.2% {
    transform: skewX(-12.5deg) skewY(-12.5deg);
  }

  33.3% {
    transform: skewX(6.25deg) skewY(6.25deg);
  }

  44.4% {
    transform: skewX(-3.125deg) skewY(-3.125deg);
  }

  55.5% {
    transform: skewX(1.5625deg) skewY(1.5625deg);
  }

  66.6% {
    transform: skewX(-0.78125deg) skewY(-0.78125deg);
  }

  77.7% {
    transform: skewX(0.390625deg) skewY(0.390625deg);
  }

  88.8% {
    transform: skewX(-0.1953125deg) skewY(-0.1953125deg);
  }
}

.jello {
  animation-name: jello;
  transform-origin: center;
}

@keyframes bounceIn {
  from, 20%, 40%, 60%, 80%, to {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
  }

  0% {
    opacity: 0;
    transform: scale3d(.3, .3, .3);
  }

  20% {
    transform: scale3d(1.1, 1.1, 1.1);
  }

  40% {
    transform: scale3d(.9, .9, .9);
  }

  60% {
    opacity: 1;
    transform: scale3d(1.03, 1.03, 1.03);
  }

  80% {
    transform: scale3d(.97, .97, .97);
  }

  to {
    opacity: 1;
    transform: scale3d(1, 1, 1);
  }
}

.bounceIn {
  animation-name: bounceIn;
}

@keyframes bounceInDown {
  from, 60%, 75%, 90%, to {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
  }

  0% {
    opacity: 0;
    transform: translate3d(0, -3000px, 0);
  }

  60% {
    opacity: 1;
    transform: translate3d(0, 25px, 0);
  }

  75% {
    transform: translate3d(0, -10px, 0);
  }

  90% {
    transform: translate3d(0, 5px, 0);
  }

  to {
    transform: none;
  }
}

.bounceInDown {
  animation-name: bounceInDown;
}

@keyframes bounceInLeft {
  from, 60%, 75%, 90%, to {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
  }

  0% {
    opacity: 0;
    transform: translate3d(-3000px, 0, 0);
  }

  60% {
    opacity: 1;
    transform: translate3d(25px, 0, 0);
  }

  75% {
    transform: translate3d(-10px, 0, 0);
  }

  90% {
    transform: translate3d(5px, 0, 0);
  }

  to {
    transform: none;
  }
}

.bounceInLeft {
  animation-name: bounceInLeft;
}

@keyframes bounceInRight {
  from, 60%, 75%, 90%, to {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
  }

  from {
    opacity: 0;
    transform: translate3d(3000px, 0, 0);
  }

  60% {
    opacity: 1;
    transform: translate3d(-25px, 0, 0);
  }

  75% {
    transform: translate3d(10px, 0, 0);
  }

  90% {
    transform: translate3d(-5px, 0, 0);
  }

  to {
    transform: none;
  }
}

.bounceInRight {
  animation-name: bounceInRight;
}

@keyframes bounceInUp {
  from, 60%, 75%, 90%, to {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
  }

  from {
    opacity: 0;
    transform: translate3d(0, 3000px, 0);
  }

  60% {
    opacity: 1;
    transform: translate3d(0, -20px, 0);
  }

  75% {
    transform: translate3d(0, 10px, 0);
  }

  90% {
    transform: translate3d(0, -5px, 0);
  }

  to {
    transform: translate3d(0, 0, 0);
  }
}

.bounceInUp {
  animation-name: bounceInUp;
}

@keyframes bounceOut {
  20% {
    transform: scale3d(.9, .9, .9);
  }

  50%, 55% {
    opacity: 1;
    transform: scale3d(1.1, 1.1, 1.1);
  }

  to {
    opacity: 0;
    transform: scale3d(.3, .3, .3);
  }
}

.bounceOut {
  animation-name: bounceOut;
}

@keyframes bounceOutDown {
  20% {
    transform: translate3d(0, 10px, 0);
  }

  40%, 45% {
    opacity: 1;
    transform: translate3d(0, -20px, 0);
  }

  to {
    opacity: 0;
    transform: translate3d(0, 2000px, 0);
  }
}

.bounceOutDown {
  animation-name: bounceOutDown;
}

@keyframes bounceOutLeft {
  20% {
    opacity: 1;
    transform: translate3d(20px, 0, 0);
  }

  to {
    opacity: 0;
    transform: translate3d(-2000px, 0, 0);
  }
}

.bounceOutLeft {
  animation-name: bounceOutLeft;
}

@keyframes bounceOutRight {
  20% {
    opacity: 1;
    transform: translate3d(-20px, 0, 0);
  }

  to {
    opacity: 0;
    transform: translate3d(2000px, 0, 0);
  }
}

.bounceOutRight {
  animation-name: bounceOutRight;
}

@keyframes bounceOutUp {
  20% {
    transform: translate3d(0, -10px, 0);
  }

  40%, 45% {
    opacity: 1;
    transform: translate3d(0, 20px, 0);
  }

  to {
    opacity: 0;
    transform: translate3d(0, -2000px, 0);
  }
}

.bounceOutUp {
  animation-name: bounceOutUp;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

.fadeIn {
  animation-name: fadeIn;
}

@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translate3d(0, -100%, 0);
  }

  to {
    opacity: 1;
    transform: none;
  }
}

.fadeInDown {
  animation-name: fadeInDown;
}

@keyframes fadeInDownBig {
  from {
    opacity: 0;
    transform: translate3d(0, -2000px, 0);
  }

  to {
    opacity: 1;
    transform: none;
  }
}

.fadeInDownBig {
  animation-name: fadeInDownBig;
}

@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translate3d(-100%, 0, 0);
  }

  to {
    opacity: 1;
    transform: none;
  }
}

.fadeInLeft {
  animation-name: fadeInLeft;
}

@keyframes fadeInLeftBig {
  from {
    opacity: 0;
    transform: translate3d(-2000px, 0, 0);
  }

  to {
    opacity: 1;
    transform: none;
  }
}

.fadeInLeftBig {
  animation-name: fadeInLeftBig;
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translate3d(100%, 0, 0);
  }

  to {
    opacity: 1;
    transform: none;
  }
}

.fadeInRight {
  animation-name: fadeInRight;
}

@keyframes fadeInRightBig {
  from {
    opacity: 0;
    transform: translate3d(2000px, 0, 0);
  }

  to {
    opacity: 1;
    transform: none;
  }
}

.fadeInRightBig {
  animation-name: fadeInRightBig;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translate3d(0, 100%, 0);
  }

  to {
    opacity: 1;
    transform: none;
  }
}

.fadeInUp {
  animation-name: fadeInUp;
}

@keyframes fadeInUpBig {
  from {
    opacity: 0;
    transform: translate3d(0, 2000px, 0);
  }

  to {
    opacity: 1;
    transform: none;
  }
}

.fadeInUpBig {
  animation-name: fadeInUpBig;
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

.fadeOut {
  animation-name: fadeOut;
}

@keyframes fadeOutDown {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    transform: translate3d(0, 100%, 0);
  }
}

.fadeOutDown {
  animation-name: fadeOutDown;
}

@keyframes fadeOutDownBig {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    transform: translate3d(0, 2000px, 0);
  }
}

.fadeOutDownBig {
  animation-name: fadeOutDownBig;
}

@keyframes fadeOutLeft {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    transform: translate3d(-100%, 0, 0);
  }
}

.fadeOutLeft {
  animation-name: fadeOutLeft;
}

@keyframes fadeOutLeftBig {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    transform: translate3d(-2000px, 0, 0);
  }
}

.fadeOutLeftBig {
  animation-name: fadeOutLeftBig;
}

@keyframes fadeOutRight {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    transform: translate3d(100%, 0, 0);
  }
}

.fadeOutRight {
  animation-name: fadeOutRight;
}

@keyframes fadeOutRightBig {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    transform: translate3d(2000px, 0, 0);
  }
}

.fadeOutRightBig {
  animation-name: fadeOutRightBig;
}

@keyframes fadeOutUp {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    transform: translate3d(0, -100%, 0);
  }
}

.fadeOutUp {
  animation-name: fadeOutUp;
}

@keyframes fadeOutUpBig {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    transform: translate3d(0, -2000px, 0);
  }
}

.fadeOutUpBig {
  animation-name: fadeOutUpBig;
}

@keyframes flip {
  from {
    transform: perspective(400px) rotate3d(0, 1, 0, -360deg);
    animation-timing-function: ease-out;
  }

  40% {
    transform: perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -190deg);
    animation-timing-function: ease-out;
  }

  50% {
    transform: perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -170deg);
    animation-timing-function: ease-in;
  }

  80% {
    transform: perspective(400px) scale3d(.95, .95, .95);
    animation-timing-function: ease-in;
  }

  to {
    transform: perspective(400px);
    animation-timing-function: ease-in;
  }
}

.animated.flip {
  -webkit-backface-visibility: visible;
  backface-visibility: visible;
  animation-name: flip;
}

@keyframes flipInX {
  from {
    transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
    animation-timing-function: ease-in;
    opacity: 0;
  }

  40% {
    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
    animation-timing-function: ease-in;
  }

  60% {
    transform: perspective(400px) rotate3d(1, 0, 0, 10deg);
    opacity: 1;
  }

  80% {
    transform: perspective(400px) rotate3d(1, 0, 0, -5deg);
  }

  to {
    transform: perspective(400px);
  }
}

.flipInX {
  -webkit-backface-visibility: visible !important;
  backface-visibility: visible !important;
  animation-name: flipInX;
}

@keyframes flipInY {
  from {
    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
    animation-timing-function: ease-in;
    opacity: 0;
  }

  40% {
    transform: perspective(400px) rotate3d(0, 1, 0, -20deg);
    animation-timing-function: ease-in;
  }

  60% {
    transform: perspective(400px) rotate3d(0, 1, 0, 10deg);
    opacity: 1;
  }

  80% {
    transform: perspective(400px) rotate3d(0, 1, 0, -5deg);
  }

  to {
    transform: perspective(400px);
  }
}

.flipInY {
  -webkit-backface-visibility: visible !important;
  backface-visibility: visible !important;
  animation-name: flipInY;
}

@keyframes flipOutX {
  from {
    transform: perspective(400px);
  }

  30% {
    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
    opacity: 1;
  }

  to {
    transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
    opacity: 0;
  }
}

.flipOutX {
  animation-name: flipOutX;
  -webkit-backface-visibility: visible !important;
  backface-visibility: visible !important;
}

@keyframes flipOutY {
  from {
    transform: perspective(400px);
  }

  30% {
    transform: perspective(400px) rotate3d(0, 1, 0, -15deg);
    opacity: 1;
  }

  to {
    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
    opacity: 0;
  }
}

.flipOutY {
  -webkit-backface-visibility: visible !important;
  backface-visibility: visible !important;
  animation-name: flipOutY;
}

@keyframes lightSpeedIn {
  from {
    transform: translate3d(100%, 0, 0) skewX(-30deg);
    opacity: 0;
  }

  60% {
    transform: skewX(20deg);
    opacity: 1;
  }

  80% {
    transform: skewX(-5deg);
    opacity: 1;
  }

  to {
    transform: none;
    opacity: 1;
  }
}

.lightSpeedIn {
  animation-name: lightSpeedIn;
  animation-timing-function: ease-out;
}

@keyframes lightSpeedOut {
  from {
    opacity: 1;
  }

  to {
    transform: translate3d(100%, 0, 0) skewX(30deg);
    opacity: 0;
  }
}

.lightSpeedOut {
  animation-name: lightSpeedOut;
  animation-timing-function: ease-in;
}

@keyframes rotateIn {
  from {
    transform-origin: center;
    transform: rotate3d(0, 0, 1, -200deg);
    opacity: 0;
  }

  to {
    transform-origin: center;
    transform: none;
    opacity: 1;
  }
}

.rotateIn {
  animation-name: rotateIn;
}

@keyframes rotateInDownLeft {
  from {
    transform-origin: left bottom;
    transform: rotate3d(0, 0, 1, -45deg);
    opacity: 0;
  }

  to {
    transform-origin: left bottom;
    transform: none;
    opacity: 1;
  }
}

.rotateInDownLeft {
  animation-name: rotateInDownLeft;
}

@keyframes rotateInDownRight {
  from {
    transform-origin: right bottom;
    transform: rotate3d(0, 0, 1, 45deg);
    opacity: 0;
  }

  to {
    transform-origin: right bottom;
    transform: none;
    opacity: 1;
  }
}

.rotateInDownRight {
  animation-name: rotateInDownRight;
}

@keyframes rotateInUpLeft {
  from {
    transform-origin: left bottom;
    transform: rotate3d(0, 0, 1, 45deg);
    opacity: 0;
  }

  to {
    transform-origin: left bottom;
    transform: none;
    opacity: 1;
  }
}

.rotateInUpLeft {
  animation-name: rotateInUpLeft;
}

@keyframes rotateInUpRight {
  from {
    transform-origin: right bottom;
    transform: rotate3d(0, 0, 1, -90deg);
    opacity: 0;
  }

  to {
    transform-origin: right bottom;
    transform: none;
    opacity: 1;
  }
}

.rotateInUpRight {
  animation-name: rotateInUpRight;
}

@keyframes rotateOut {
  from {
    transform-origin: center;
    opacity: 1;
  }

  to {
    transform-origin: center;
    transform: rotate3d(0, 0, 1, 200deg);
    opacity: 0;
  }
}

.rotateOut {
  animation-name: rotateOut;
}

@keyframes rotateOutDownLeft {
  from {
    transform-origin: left bottom;
    opacity: 1;
  }

  to {
    transform-origin: left bottom;
    transform: rotate3d(0, 0, 1, 45deg);
    opacity: 0;
  }
}

.rotateOutDownLeft {
  animation-name: rotateOutDownLeft;
}

@keyframes rotateOutDownRight {
  from {
    transform-origin: right bottom;
    opacity: 1;
  }

  to {
    transform-origin: right bottom;
    transform: rotate3d(0, 0, 1, -45deg);
    opacity: 0;
  }
}

.rotateOutDownRight {
  animation-name: rotateOutDownRight;
}

@keyframes rotateOutUpLeft {
  from {
    transform-origin: left bottom;
    opacity: 1;
  }

  to {
    transform-origin: left bottom;
    transform: rotate3d(0, 0, 1, -45deg);
    opacity: 0;
  }
}

.rotateOutUpLeft {
  animation-name: rotateOutUpLeft;
}

@keyframes rotateOutUpRight {
  from {
    transform-origin: right bottom;
    opacity: 1;
  }

  to {
    transform-origin: right bottom;
    transform: rotate3d(0, 0, 1, 90deg);
    opacity: 0;
  }
}

.rotateOutUpRight {
  animation-name: rotateOutUpRight;
}

@keyframes hinge {
  0% {
    transform-origin: top left;
    animation-timing-function: ease-in-out;
  }

  20%, 60% {
    transform: rotate3d(0, 0, 1, 80deg);
    transform-origin: top left;
    animation-timing-function: ease-in-out;
  }

  40%, 80% {
    transform: rotate3d(0, 0, 1, 60deg);
    transform-origin: top left;
    animation-timing-function: ease-in-out;
    opacity: 1;
  }

  to {
    transform: translate3d(0, 700px, 0);
    opacity: 0;
  }
}

.hinge {
  animation-name: hinge;
}

@keyframes jackInTheBox {
  from {
    opacity: 0;
    transform: scale(0.1) rotate(30deg);
    transform-origin: center bottom;
  }

  50% {
    transform: rotate(-10deg);
  }

  70% {
    transform: rotate(3deg);
  }

  to {
    opacity: 1;
    transform: scale(1);
  }
}

.jackInTheBox {
  animation-name: jackInTheBox;
}

/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */

@keyframes rollIn {
  from {
    opacity: 0;
    transform: translate3d(-100%, 0, 0) rotate3d(0, 0, 1, -120deg);
  }

  to {
    opacity: 1;
    transform: none;
  }
}

.rollIn {
  animation-name: rollIn;
}

/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */

@keyframes rollOut {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    transform: translate3d(100%, 0, 0) rotate3d(0, 0, 1, 120deg);
  }
}

.rollOut {
  animation-name: rollOut;
}

@keyframes zoomIn {
  from {
    opacity: 0;
    transform: scale3d(.3, .3, .3);
  }

  50% {
    opacity: 1;
  }
}

.zoomIn {
  animation-name: zoomIn;
}

@keyframes zoomInDown {
  from {
    opacity: 0;
    transform: scale3d(.1, .1, .1) translate3d(0, -1000px, 0);
    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
  }

  60% {
    opacity: 1;
    transform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
  }
}

.zoomInDown {
  animation-name: zoomInDown;
}

@keyframes zoomInLeft {
  from {
    opacity: 0;
    transform: scale3d(.1, .1, .1) translate3d(-1000px, 0, 0);
    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
  }

  60% {
    opacity: 1;
    transform: scale3d(.475, .475, .475) translate3d(10px, 0, 0);
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
  }
}

.zoomInLeft {
  animation-name: zoomInLeft;
}

@keyframes zoomInRight {
  from {
    opacity: 0;
    transform: scale3d(.1, .1, .1) translate3d(1000px, 0, 0);
    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
  }

  60% {
    opacity: 1;
    transform: scale3d(.475, .475, .475) translate3d(-10px, 0, 0);
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
  }
}

.zoomInRight {
  animation-name: zoomInRight;
}

@keyframes zoomInUp {
  from {
    opacity: 0;
    transform: scale3d(.1, .1, .1) translate3d(0, 1000px, 0);
    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
  }

  60% {
    opacity: 1;
    transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
  }
}

.zoomInUp {
  animation-name: zoomInUp;
}

@keyframes zoomOut {
  from {
    opacity: 1;
  }

  50% {
    opacity: 0;
    transform: scale3d(.3, .3, .3);
  }

  to {
    opacity: 0;
  }
}

.zoomOut {
  animation-name: zoomOut;
}

@keyframes zoomOutDown {
  40% {
    opacity: 1;
    transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);
    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
  }

  to {
    opacity: 0;
    transform: scale3d(.1, .1, .1) translate3d(0, 2000px, 0);
    transform-origin: center bottom;
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
  }
}

.zoomOutDown {
  animation-name: zoomOutDown;
}

@keyframes zoomOutLeft {
  40% {
    opacity: 1;
    transform: scale3d(.475, .475, .475) translate3d(42px, 0, 0);
  }

  to {
    opacity: 0;
    transform: scale(.1) translate3d(-2000px, 0, 0);
    transform-origin: left center;
  }
}

.zoomOutLeft {
  animation-name: zoomOutLeft;
}

@keyframes zoomOutRight {
  40% {
    opacity: 1;
    transform: scale3d(.475, .475, .475) translate3d(-42px, 0, 0);
  }

  to {
    opacity: 0;
    transform: scale(.1) translate3d(2000px, 0, 0);
    transform-origin: right center;
  }
}

.zoomOutRight {
  animation-name: zoomOutRight;
}

@keyframes zoomOutUp {
  40% {
    opacity: 1;
    transform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);
    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
  }

  to {
    opacity: 0;
    transform: scale3d(.1, .1, .1) translate3d(0, -2000px, 0);
    transform-origin: center bottom;
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
  }
}

.zoomOutUp {
  animation-name: zoomOutUp;
}

@keyframes slideInDown {
  from {
    transform: translate3d(0, -100%, 0);
    visibility: visible;
  }

  to {
    transform: translate3d(0, 0, 0);
  }
}

.slideInDown {
  animation-name: slideInDown;
}

@keyframes slideInLeft {
  from {
    transform: translate3d(-100%, 0, 0);
    visibility: visible;
  }

  to {
    transform: translate3d(0, 0, 0);
  }
}

.slideInLeft {
  animation-name: slideInLeft;
}

@keyframes slideInRight {
  from {
    transform: translate3d(100%, 0, 0);
    visibility: visible;
  }

  to {
    transform: translate3d(0, 0, 0);
  }
}

.slideInRight {
  animation-name: slideInRight;
}

@keyframes slideInUp {
  from {
    transform: translate3d(0, 100%, 0);
    visibility: visible;
  }

  to {
    transform: translate3d(0, 0, 0);
  }
}

.slideInUp {
  animation-name: slideInUp;
}

@keyframes slideOutDown {
  from {
    transform: translate3d(0, 0, 0);
  }

  to {
    visibility: hidden;
    transform: translate3d(0, 100%, 0);
  }
}

.slideOutDown {
  animation-name: slideOutDown;
}

@keyframes slideOutLeft {
  from {
    transform: translate3d(0, 0, 0);
  }

  to {
    visibility: hidden;
    transform: translate3d(-100%, 0, 0);
  }
}

.slideOutLeft {
  animation-name: slideOutLeft;
}

@keyframes slideOutRight {
  from {
    transform: translate3d(0, 0, 0);
  }

  to {
    visibility: hidden;
    transform: translate3d(100%, 0, 0);
  }
}

.slideOutRight {
  animation-name: slideOutRight;
}

@keyframes slideOutUp {
  from {
    transform: translate3d(0, 0, 0);
  }

  to {
    visibility: hidden;
    transform: translate3d(0, -100%, 0);
  }
}

.slideOutUp {
  animation-name: slideOutUp;
}

// Visibility
._invisible {
    visibility: hidden;
}

._visible {
    visibility: visible;
}

// Display
._display-block {
    display: block;
}

._hide {
    display: none !important;
}

@include breakpoint(sm) {
    ._hide-sm {
        display: none !important;
    }
}

@include breakpoint($min: $sm + 1) {
    ._show-sm {
        display: none !important;
    }
}

// Print
@media print {
    ._hide-print {
        display: none !important;
    }
    ._show-print {
        display: block !important;
    }
}

// No scroll
._no-scroll {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100% !important;
    overflow: hidden;
}

// Responsive embedded objects
._video-container {
    height: 0;
    padding-bottom: 56.25%; // ratio 16:9
    position: relative;
    margin-bottom: $margin-bottom;
    & iframe,
    & object,
    & embed {
        position: absolute;
        top: 0;
        left: 0;
        width: 100% !important;
        height: 100% !important;
    }
}

// Margins
._mb0   {margin-bottom: 0px !important;}
._mb5   {margin-bottom: 5px !important;}
._mb10  {margin-bottom: 10px !important;}
._mb15  {margin-bottom: 15px !important;}
._mb20  {margin-bottom: 20px !important;}
._mb25  {margin-bottom: 25px !important;}
._mb30  {margin-bottom: 30px !important;}
._mb35  {margin-bottom: 35px !important;}
._mb40  {margin-bottom: 40px !important;}
._mb45  {margin-bottom: 45px !important;}
._mb50  {margin-bottom: 50px !important;}
._mb55  {margin-bottom: 55px !important;}
._mb60  {margin-bottom: 60px !important;}
._mb65  {margin-bottom: 65px !important;}
._mb70  {margin-bottom: 70px !important;}
._mb75  {margin-bottom: 75px !important;}
._mb80  {margin-bottom: 80px !important;}
._mb85  {margin-bottom: 85px !important;}
._mb90  {margin-bottom: 90px !important;}
._mb95  {margin-bottom: 95px !important;}
._mb100 {margin-bottom: 100px !important;}
// Group
._group {
    @include clearfix;
}

// Float
._float-right {
    float: right;
}
._float-left {
    float: left;
}

@include breakpoint(sm) {
    ._float-right { float:none;}
    ._float-left  { float:none;}
}

// Fixed
._fixed {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
}

// Alignment
._mid {
    @include vertical-align();
}
// Width
._w5   { width: 5%;   }
._w10  { width: 10%;  }
._w15  { width: 15%;  }
._w20  { width: 20%;  }
._w25  { width: 25%;  }
._w30  { width: 30%;  }
._w35  { width: 35%;  }
._w40  { width: 40%;  }
._w45  { width: 45%;  }
._w50  { width: 50%;  }
._w55  { width: 55%;  }
._w60  { width: 60%;  }
._w65  { width: 65%;  }
._w70  { width: 70%;  }
._w75  { width: 75%;  }
._w80  { width: 80%;  }
._w85  { width: 85%;  }
._w90  { width: 90%;  }
._w95  { width: 95%;  }
._w100 { width: 100%; }

._w-auto { width: auto; }
.Breadcrumbs {
	font-size: $font-size-small;
	margin-bottom: $base-line;

    & ul {
        @include flex;
        @include flex-items-middle;
    }
    &._centered ul {
        @include flex-items-center;
    }
    & span,
    & a {
    	font-style: normal;
    	padding: 0 10px;
    	display: inline-block;
    	white-space: nowrap;
    }
    & li {
        &:after {
        	display: inline-block;
        	content: '/';
        	color: rgba(0, 0, 0, .3);
        }
        &:last-child:after {
        	display: none;
        }
        &:first-child span,
        &:first-child a {
            padding-left: 0;
        }
        &._active a {
            color: $color-text;
        	text-decoration: none;
        	cursor: text;
        }
    }
}

.Button {
    display: inline-block;
    height: $height-input;
    padding: 0 $padding-rl-button;
    border: 1px solid transparent;
    border-radius: $border-radius-button;
    background-color: $color-button-primary;
    color: $color-button-primary-text;
    font-size: $font-size-button;
    font-family: $font-family-buttons;
    font-weight: $font-weight-button;
    line-height: $base-line-button - 2px;
    text-decoration: none;
    text-align: center;
    cursor: pointer;
    vertical-align: middle;
    transition: background 200ms ease;
    -webkit-appearance: none;

    &:hover {
        outline: none;
        text-decoration: none;
        color: $color-button-primary-text;
        background-color: lighten($color-button-primary, 10%);
    }

    &:disabled,
    &._disabled {
        background-color: rgba($color-button-primary, .7);
        color: rgba($color-button-primary-text, 1);
        cursor: default;
        font-style: normal;
    }

    &._outline {
        border-width: 2px;
        border-color: $color-button-primary;
        background: none;
        color: $color-button-primary;

        &:hover {
            border-color: rgba($color-button-primary, .5);
            background: none;
            color: rgba($color-button-primary, .6);
        }

        &:disabled,
        &._disabled {
            border-color: rgba($color-button-primary, .5);
            background: none;
            color: rgba($color-button-primary, .7);
        }
    }

    &._raised {
        box-shadow: 0 1px 3px rgba(0, 0, 0, .3);
    }

    &._upper {
        text-transform: uppercase;
        letter-spacing: .04em;
    }

    &._rounded {
        border-radius: $height-input / 2 ;
    }

    &._secondary {
        @include button($color-button-secondary-text, $color-button-secondary);
    }
}

.Form {
    margin-bottom: $margin-bottom;

    fieldset {
        margin-bottom: 2rem;
        padding: 2rem;
        border: 1px solid rgba(0, 0, 0, .1);
        font-family: inherit;

        legend {
            position: relative;
            margin-left: -1rem;
            padding: 0 1rem;
            font-weight: bold;
            font-size: $font-size-small;
            text-transform: uppercase;
            line-height: 0;
        }
    }

    .form-item {
        margin-bottom: $margin-bottom;

        label {
            display: block;
            color: $color-text;
            margin-bottom: 4px;
            font-size: $font-size - 1px;

            &._checkbox {
                color: inherit;
                font-size: $font-size;
                font-weight: normal;
                text-transform: none;
                line-height: $base-line;
                cursor: pointer;

                & input {
                    margin-top: 0;
                }
            }
        }

        > div {
            // Modificadores
            &._append,
            &._prepend {
                @include flex;

                & input {
                    @include flex-item-one;
                }
                & .Button,
                & span {
                    @include flex-item-shrink;
                }
                & span {
                    @include flex;
                    @include flex-items-column;
                    @include flex-items-center;

                    font-weight: normal;
                    border: $border-width-input solid $border-color-input;
                    background-color: #f8f8f8;
                    padding: 0 .875rem;
                    color: rgba(0, 0, 0, .5);
                    font-size: $font-size-small;
                    white-space: nowrap;
                }
            }

            &._prepend {
                & input {
                    border-radius: 0 $border-radius-input $border-radius-input 0;
                }
                & .Button {
                    margin-right: -1px;
                    border-radius: $border-radius-input 0 0 $border-radius-input !important;
                }
                & span {
                    border-right: none;
                    border-radius: $border-radius-input 0 0 $border-radius-input;
                }
            }

            &._append {
                & input {
                    border-radius: $border-radius-input 0 0 $border-radius-input;
                }
                & .Button {
                    margin-left: -1px;
                    border-radius: 0 $border-radius-input $border-radius-input 0 !important;
                }
                & span {
                    border-left: none;
                    border-radius: 0 $border-radius-input $border-radius-input 0;
                }
            }
        }

        // Modificadores
        &._checkboxes {
            & label.checkbox {
                display: inline-block;
                margin-right: 16px;
            }
        }

        &._buttons {
            & button,
            & .Button {
                margin-right: 8px;
            }
        }
    }


    // Modificadores
    &._horizontal {
        .form-item {
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;

            label {
                width: 30%;
                line-height: $height-input;
            }
            > div {width: 70%;}

            @include breakpoint(sm) {
                display: block;

                label,
                > div {width: 100%;}
            }
        }
    }

    &._inline {
        & input,
        & textarea,
        & select {
            display: inline-block;
            width: auto;
        }
    }
}

input,
textarea,
select {
    display: block;
    width: 100%;
    height: $height-input;
    padding: 0 $padding-rl-input;
    border: $border-width-input solid $border-color-input;
    border-radius: $border-radius-input;
    background-color: $background-color-input;
    font-family: $font-family-input;
    font-size: $font-size-input;
    outline: none;
    vertical-align: middle;
    box-shadow: $box-shadow-input;

    &:focus {
        border-color: $color-focus;
        box-shadow: $box-shadow-input-focus;
        outline: none;
    }

    &._error {
        border: $border-width-input solid lighten($color-error, 15%);
        background-color: rgba($color-error, .1);

        &:focus {
            border-color: $color-error;
            box-shadow: $box-shadow-input-focus-error;
        }
    }

    &._success {
        border: $border-width-input solid lighten($color-success, 15%);
        background-color: rgba($color-success, .1);

        &:focus {
            border-color: $color-success;
            box-shadow: $box-shadow-input-focus-success;
        }
    }

    &:disabled,
    &._disabled {
        resize: none;
        opacity: 0.6;
        cursor: default;
        font-style: italic;
        color: rgba(0, 0, 0, .5);
    }
}

input {
    &[type="submit"] {
        width: auto;
    }

    &[type="file"] {
        display: inline-block;
        width: auto;
        height: auto;
        border: none;
        padding: 0;
        background: none;
        box-shadow: none;
    }

    &[type="search"],
    &._search {
        padding-left: 32px;
        background-repeat: no-repeat;
        background-position: 8px 53%;
        background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"><path fill="#000" fill-opacity="0.4" d="M14.891,14.39l-0.5.5a0.355,0.355,0,0,1-.5,0L9.526,10.529a5.3,5.3,0,1,1,2.106-4.212,5.268,5.268,0,0,1-1.1,3.21l4.362,4.362A0.354,0.354,0,0,1,14.891,14.39ZM6.316,2.418a3.9,3.9,0,1,0,3.9,3.9A3.9,3.9,0,0,0,6.316,2.418Z"/></svg>');
    }

    &[type="radio"],
    &[type="checkbox"] {
        display: inline-block;
        width: auto;
        height: auto;
        padding: 0;

        &:focus {
            box-shadow: none;
        }
    }
}

textarea {
    height: auto;
    padding: $padding-tb-textarea $padding-rl-input;
    vertical-align: top;
}

select {
    -webkit-appearance: none;
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="9" height="12" viewBox="0 0 9 12"><path fill="#5e6c75" d="M0.722,4.823L-0.01,4.1,4.134-.01,4.866,0.716Zm7.555,0L9.01,4.1,4.866-.01l-0.732.726ZM0.722,7.177L-0.01,7.9,4.134,12.01l0.732-.726Zm7.555,0L9.01,7.9,4.866,12.01l-0.732-.726Z"/></svg>');
    background-repeat: no-repeat;
    background-position: right 1rem center;
}

select[multiple] {
    height: auto;
    padding: .5rem .75rem;
    background-image: none;
}

.Row {

    // Grid Row
    @include grid-row;

    // Grid Columns
    @include generate-grid-columns;

    .col {
        // Offset
        &[class^='_offset-'],
        &[class*=' _offset-'] {
            @include breakpoint(sm) {
                margin-left: 0;
            }
        }

        // Ordering
        &._first {order: -1;}
        &._last  {order: 1;}
    }

    // Gutters
    &._gutters,
    &._gutters > .Row {
        margin-left: -$grid-gutter;

        @include breakpoint(sm) {
            margin-left: 0;
        }

        & > .col {
            margin-left: $grid-gutter;

            @include breakpoint(sm) {
                margin-left: 0;
            }
        }
    }

    // Auto width
    &._auto {
        & .col {
            flex: 1 1 0%;
        }
    }

    @include breakpoint(sm) {
        & .col {
            margin-left: 0;
            width: 100%;

            &._first-sm {order: -1;}
            &._last-sm  {order: 1;}
        }
    }
}

.Message {
    position: relative;
    padding: 1rem;
    padding-right: 2.5em;
    padding-bottom: .75rem;
    margin-bottom: $margin-bottom;
    background: #eee;
    color: $color-text;
    font-family: $font-family;
    font-size: $font-size-small;
    line-height: $base-line;

    & a {color: inherit;}

    & p,
    & h1,
    & h2,
    & h3,
    & h4,
    & h5,
    & h6 {
        margin-bottom: 0;
    }

    &._error {
        background: $color-error;
        color: #fff;
    }
    &._success {
        background: $color-success;
        color: #fff;
    }
    &._warning {
        background: $color-warning;
    }
    &._focus {
        background: $color-focus;
        color: #fff;
    }
}

.Pagination {
    margin: $margin-bottom 0;
    font-size: $font-size-small;

    ul {
        @include flex;
        @extend ._unstyled;
        margin: 0;

        li {
            margin: 0 1px;

            span,
            a {
                display: inline-block;
                padding: 8px 12px;
                border: 1px solid transparent;
                border-radius: 3px;
                line-height: 1;
                white-space: nowrap;
            }

            a {
                color: $color-text;
                text-decoration: none;

                &:hover {
                    border-color: #eee;
                    color: rgba(0, 0, 0, .5);
                }
            }

            & span,
            &._active a {
                color: rgba(0, 0, 0, .5);
                border-color: #eee;
                cursor: text;
            }
        }
    }

    &._centered {
        ul {
            @include flex-items-center;
        }
    }

    &._pager {
        li {
            @include flex-basis(50%);

            &.next {
                text-align: right;
            }

            a {
                padding-left: 16px;
                padding-right: 16px;
                border-radius: 64px;
                border-color: rgba(0, 0, 0, .1);
            }
        }

        &._centered {
            li {
                @include flex-basis(auto);
                margin-left: 4px;
                margin-right: 4px;
            }
        }
    }
}

.Table {
	max-width: 100%;
	width: 100%;
	border-collapse: collapse;
	border-spacing: 0;
	font-size: $font-size-table;
	line-height: $base-line-table;
	empty-cells: show;

	caption {
	    color: rgba($color-text, .5);
	    text-align: left;
	    font-size: $font-size-small;
	    font-weight: 500;
	}

	th {
	    text-align: left;
	    font-weight: 700;
	    vertical-align: bottom;
	}

	td {
	    vertical-align: top;
	}

	th,
	td {
	    padding: $padding-tb-table $padding-rl-table;
	    border-bottom: $border-table;

	    &:first-child {
	        padding-left: 0;
	    }

	    &:last-child {
	        padding-right: 0;
	    }
	}

	tfoot th,
	tfoot td {
	    color: rgba($color-text, .5);
	}

	// Modificadores
	&._bordered {
	    & td,
	    & th {
	        border: $border-table;
	    }
	}

	&._striped tr:nth-child(odd) td {
	    background: $background-color-table-striped;
	}

	&._bordered,
	&._striped {
	    & td,
	    & th {
	        &:first-child {
	            padding-left: $padding-rl-table;
	        }
	        &:last-child {
	            padding-right: $padding-rl-table;
	        }
	    }
	}

	&._unstyled {
	    & td,
	    & th {
	        border: none;
	        padding: 0;
	    }
	}

	tr._align-middle td,
	td._align-middle {
	    vertical-align: middle;
	}
}
