// COLORS
// ---------------------------------------------------------------------------

// Text
$color-text: #313439 !default;
$color-headings: #0d0d0e !default;

// Links
$color-link: #3498db !default;
$color-link-hover: #2980b9 !default;

// Button
$color-button-primary: #1c86f2 !default;
$color-button-primary-text: #fff !default;
$color-button-hover: #313439 !default;
$color-button-secondary: #313439 !default;
$color-button-secondary-text: #fff !default;

// States
$color-error: #e74c3c !default;
$color-success: #35beb1 !default;
$color-warning: #f7ba45 !default;
$color-focus: #3498db !default;


// FONT FAMILY
// ---------------------------------------------------------------------------
$text-font-family: Arial, 'Helvetica Neue', Helvetica, sans-serif !default;
$monospace-font-family: Consolas, Monaco, 'Courier New', monospace !default;
$headings-font-family: $text-font-family !default;
$buttons-font-family: $text-font-family !default;
$input-font-family: $text-font-family !default;


// TEXT
// ---------------------------------------------------------------------------

// Font Size
$font-size: 16px !default;
$font-size-small: $font-size - 2px !default;

// Baseline
$base-line: 1.5 !default;

// Margin
$text-margin-bottom: $font-size * $base-line !default;


// HEADINGS
// ---------------------------------------------------------------------------

// Font Size
$heading-font-size-1: 48px !default;
$heading-font-size-2: 36px !default;
$heading-font-size-3: 24px !default;
$heading-font-size-4: 21px !default;
$heading-font-size-5: 18px !default;
$heading-font-size-6: 16px !default;

// Baseline
$heading-base-line: 1 !default;

// Margin
$heading-margin-bottom: $text-margin-bottom !default;


// BREAKPOINTS
// ---------------------------------------------------------------------------
$xs: 480px !default;
$sm: 768px !default;
$md: 992px !default;
$lg: 1200px !default;


// GRID
// ---------------------------------------------------------------------------
$grid-columns: 12 !default;
$grid-gutter: 2% !default;


// TABLES
// ---------------------------------------------------------------------------

// Font Size
$table-font-size: $font-size-small !default;

// Baseline
$table-base-line: $base-line !default;

// Padding
$table-padding-tb: 1rem !default;
$table-padding-rl: 1rem !default;

// Border
$table-border: 1px solid rgba(0, 0, 0, .05) !default;

// Striped
$table-background-striped: #f8f8f8 !default;


// INPUTS
// ---------------------------------------------------------------------------

// Font Size
$input-font-size: $font-size - 2 !default;

// Height
$input-height: 40px !default;

// Padding
$input-padding-rl: 12px !default;
$input-textarea-padding-tb: 8px !default;

// States
$input-border-width: 1px !default;
$input-border-color: #d4d4d4 !default;
$input-background-color: #fff !default;
$input-box-shadow: none !default;

$input-focus-background-color: #fff !default;
$input-focus-border-color: $color-focus !default;
$input-focus-box-shadow: 0 0 1px $color-focus inset !default;

$input-error-background-color: $color-error !default;
$input-error-border-color: $color-error !default;
$input-error-focus-box-shadow: 0 0 1px $color-error inset !default;

$input-success-background-color: $color-success !default;
$input-success-border-color: $color-success !default;
$input-success-focus-box-shadow: 0 0 1px $color-success inset !default;

$input-disabled-opacity: .6 !default;
$input-disabled-color: rgba(0, 0, 0, .5) !default;

// Radius
$input-border-radius: 3px !default;


// BUTTONS
// ---------------------------------------------------------------------------

// Font Size
$button-font-size: $font-size - 2 !default;

// Height
$button-height: $input-height !default;

// Baseline
$button-base-line: $button-height !default;

// Padding
$button-padding-rl: 20px !default;

// Weight
$button-font-weight: bold !default;

// Radius
$button-border-radius: 3px !default;


@mixin breakpoint($min: 0, $max: 0) {

    $type: type-of($min);

    @if $type == string
    {
        @if $min == sm
        {
            @media (max-width: $sm) { @content; }
        }
        @else if $min == md
        {
            @media (min-width: $sm) and (max-width: $md) { @content; }
        }
        @else if $min == lg
        {
            @media (min-width: $lg) { @content; }
        }
    }
    @else if $type == number
    {
        $query: "all" !default;
        @if $min != 0 and $max != 0 { $query: "(min-width: #{$min}) and (max-width: #{$max})"; }
        @else if $min != 0 and $max == 0 { $query: "(min-width: #{$min})"; }
        @else if $min == 0 and $max != 0 { $query: "(max-width: #{$max})"; }
        @media #{$query} { @content; }
    }
}
@mixin button($color-text, $color-back)
{
	color: $color-text;
	background-color: $color-back;

	&:hover {
	    color: $color-text;
	    background-color: lighten($color-back, 20%);
	}
    &:disabled,
    &.disabled {
	    color: rgba($color-text, .7);
	    background-color: rgba($color-back, .7);
    }
    &.outline {
        background: none;
        color: $color-back;
        border-color: $color-back;

        &:hover {
            color: rgba($color-back, .6);
            border-color: rgba($color-back, .5);
        }
        &:disabled,
        &.disabled {
            background: none;
    	    color: rgba($color-back, .7);
    	    border-color: rgba($color-back, .5);
        }
    }
}
// display
@mixin flex {
	display: flex;
}

// basis
@mixin flex-basis($width) {
	flex-basis: $width;
}

// items wrap
@mixin flex-items-wrap {
	flex-wrap: wrap;
}

// items nowrap
@mixin flex-items-nowrap {
	flex-wrap: nowrap;
}

// items row
@mixin flex-items-row {
    flex-direction: row;
}

// items columns
@mixin flex-items-column {
    flex-direction: column;
}

// items left
@mixin flex-items-left {
    justify-content: flex-start;
}

// items right
@mixin flex-items-right {
    justify-content: flex-end;
}

// items center
@mixin flex-items-center {
	justify-content: center;
}

// items between
@mixin flex-items-space-between {
	justify-content: space-between;
}

// items around
@mixin flex-items-space-around {
	justify-content: space-around;
}

// items vertical top
@mixin flex-items-top {
    align-items: flex-start;
}

// items vertical middle
@mixin flex-items-middle {
	align-items: center;
}

// items vertical bottom
@mixin flex-items-bottom {
    align-items: flex-end;
}

// item grow
@mixin flex-item-grow($grow: 0) {
    flex-grow: $grow;
}


// item auto
@mixin flex-item-auto {
    flex: auto;
}

// item one
@mixin flex-item-one {
    flex: 1;
}

// item shrink
@mixin flex-item-shrink($num: 0) {
	flex-shrink: $num;
}

// item width
@mixin flex-item-width($width) {
	flex: 0 0 $width;

	@include breakpoint(sm) {
        flex: 0 0 100% !important;
    }
}
// Text
@mixin text-font($font) {
    body {
        font-family: #{$font};
    }
}

// Headings
@mixin headings-font($font) {
    h1.title, h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6 {
        font-family: #{$font};
    }
}

// Buttons
@mixin buttons-font($font) {
    button, .button {
        font-family: #{$font};
    }
}

// Inputs
@mixin inputs-font($font) {
    input, textarea, select {
        font-family: #{$font};
    }
}
// vertical
@mixin gradient-vertical($start: #555, $end: #333) {
	background-color: $start;
	background-image: linear-gradient(to bottom, $start 0%, $end 100%);
}

// vertical to opacity
@mixin gradient-vertical-to-opacity($color, $opacity: 0) {
	$rgba: rgba(red($color), green($color), blue($color), $opacity);
	background: linear-gradient(to bottom, $color 0%, $rgba 100%);
}

// horizontal
@mixin gradient-horizontal($start: #555, $end: #333) {
    background-color: $start;
    background: linear-gradient(to right, $start 0%, $end 100%);
}

// horizontal to opacity
@mixin gradient-horizontal-to-opacity($color: #555, $opacity: 0) {
    $rgba: rgba(red($color), green($color), blue($color), $opacity);
    background: linear-gradient(to right, $color 0%, $rgba 100%);
}

// radial
@mixin gradient-radial($inner: #555, $outer: #333) {
	background-image: radial-gradient(circle, $inner, $outer);
}
// Make Row
@mixin grid-row {
    @include flex;
    @include flex-items-row;
    @include flex-items-wrap;

    @include breakpoint(sm) {
        @include flex-items-column;
        @include flex-items-nowrap;
    }
}

// Generate Columns
@mixin generate-grid-columns {

    @for $i from 1 through $grid-columns
    {
        .col-#{$i} {
            width: 100% / $grid-columns * $i;
        }
        .offset-#{$i} {
            $width: 100% / $grid-columns * $i;
            margin-left: $width;
        }

    }

    .gutters {
        @for $i from 1 through $grid-columns
        {
            & > .col-#{$i} {
                $width: 100% / $grid-columns * $i;
                width: calc(#{$width} - #{$grid-gutter});
            }
            & > .offset-#{$i} {
                $width: 100% / $grid-columns * $i;
                margin-left: calc(#{$width} + #{$grid-gutter}) !important;
            }
        }
    }
}


// Grid Media Columns
@mixin grid-media-columns($num) {

	-webkit-column-count: $num;
	-moz-column-count: $num;
	column-count: $num;

	-webkit-column-gap: $grid-gutter;
	-moz-column-gap: $grid-gutter;
	column-gap: $grid-gutter;

	& > div {
		display: inline-block;
		width: 100%;
	}

    @include breakpoint(sm) {
		-webkit-column-count: 1;
		-moz-column-count: 1;
		column-count: 1;
    }
}
@mixin label($text, $back) {
    background: $back;
    color: $text;

    &.tag,
    &.outline {
        background: none;
        border-color: $back;
        color: $back;
    }
}
// Clearfix
@mixin clearfix {
    &:after {
        content: '';
        display: table;
        clear: both;
    }
}

// Transition
@mixin transition($transition: all linear .2s) {
    -moz-transition: $transition;
    transition: $transition;
}

// transform
@mixin transform($transforms) {
    -moz-transform: $transforms;
    -ms-transform: $transforms;
    -webkit-transform: $transforms;
    transform: $transforms;
}

// blur
@mixin blur($radius) {
    -webkit-filter: blur($radius);
    -moz-filter: blur($radius);
    -ms-filter: blur($radius);
    filter: blur($radius);
}

// striped
@mixin striped($color: rgba(255, 255, 255, .2), $angle: 45deg) {
    background-image: -webkit-linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);
    background-image: -o-linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);
    background-image: linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);
}

// animation
@mixin animation($animation) {
    -webkit-animation: $animation;
    -moz-animation: $animation;
    animation: $animation;
}


// Retina Images
@mixin retina-background-image($file, $type, $width:  auto, $height:  auto) {

    background-repeat: no-repeat;
    background-image: url($file + '.' + $type);

    @media
      only screen and (-webkit-min-device-pixel-ratio: 2),
      only screen and (min--moz-device-pixel-ratio: 2),
      only screen and (-o-min-device-pixel-ratio: 2/1),
      only screen and (min-device-pixel-ratio: 2),
      only screen and (min-resolution: 192dpi),
      only screen and (min-resolution: 2dppx) {
        background-image: url($file + '-2x.' + $type);
        background-size: $width $height;
    }
}
@charset "UTF-8";

/*!
 * animate.css -http://daneden.me/animate
 * Version - 3.5.2
 * Licensed under the MIT license - http://opensource.org/licenses/MIT
 *
 * Copyright (c) 2017 Daniel Eden
 */

.animated {
  animation-duration: 1s;
  animation-fill-mode: both;
}

.animated.infinite {
  animation-iteration-count: infinite;
}

.animated.hinge {
  animation-duration: 2s;
}

.animated.flipOutX,
.animated.flipOutY,
.animated.bounceIn,
.animated.bounceOut {
  animation-duration: .75s;
}

@keyframes bounce {
  from, 20%, 53%, 80%, to {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
    transform: translate3d(0,0,0);
  }

  40%, 43% {
    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    transform: translate3d(0, -30px, 0);
  }

  70% {
    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
    transform: translate3d(0, -15px, 0);
  }

  90% {
    transform: translate3d(0,-4px,0);
  }
}

.bounce {
  animation-name: bounce;
  transform-origin: center bottom;
}

@keyframes flash {
  from, 50%, to {
    opacity: 1;
  }

  25%, 75% {
    opacity: 0;
  }
}

.flash {
  animation-name: flash;
}

/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */

@keyframes pulse {
  from {
    transform: scale3d(1, 1, 1);
  }

  50% {
    transform: scale3d(1.05, 1.05, 1.05);
  }

  to {
    transform: scale3d(1, 1, 1);
  }
}

.pulse {
  animation-name: pulse;
}

@keyframes rubberBand {
  from {
    transform: scale3d(1, 1, 1);
  }

  30% {
    transform: scale3d(1.25, 0.75, 1);
  }

  40% {
    transform: scale3d(0.75, 1.25, 1);
  }

  50% {
    transform: scale3d(1.15, 0.85, 1);
  }

  65% {
    transform: scale3d(.95, 1.05, 1);
  }

  75% {
    transform: scale3d(1.05, .95, 1);
  }

  to {
    transform: scale3d(1, 1, 1);
  }
}

.rubberBand {
  animation-name: rubberBand;
}

@keyframes shake {
  from, to {
    transform: translate3d(0, 0, 0);
  }

  10%, 30%, 50%, 70%, 90% {
    transform: translate3d(-10px, 0, 0);
  }

  20%, 40%, 60%, 80% {
    transform: translate3d(10px, 0, 0);
  }
}

.shake {
  animation-name: shake;
}

@keyframes headShake {
  0% {
    transform: translateX(0);
  }

  6.5% {
    transform: translateX(-6px) rotateY(-9deg);
  }

  18.5% {
    transform: translateX(5px) rotateY(7deg);
  }

  31.5% {
    transform: translateX(-3px) rotateY(-5deg);
  }

  43.5% {
    transform: translateX(2px) rotateY(3deg);
  }

  50% {
    transform: translateX(0);
  }
}

.headShake {
  animation-timing-function: ease-in-out;
  animation-name: headShake;
}

@keyframes swing {
  20% {
    transform: rotate3d(0, 0, 1, 15deg);
  }

  40% {
    transform: rotate3d(0, 0, 1, -10deg);
  }

  60% {
    transform: rotate3d(0, 0, 1, 5deg);
  }

  80% {
    transform: rotate3d(0, 0, 1, -5deg);
  }

  to {
    transform: rotate3d(0, 0, 1, 0deg);
  }
}

.swing {
  transform-origin: top center;
  animation-name: swing;
}

@keyframes tada {
  from {
    transform: scale3d(1, 1, 1);
  }

  10%, 20% {
    transform: scale3d(.9, .9, .9) rotate3d(0, 0, 1, -3deg);
  }

  30%, 50%, 70%, 90% {
    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);
  }

  40%, 60%, 80% {
    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);
  }

  to {
    transform: scale3d(1, 1, 1);
  }
}

.tada {
  animation-name: tada;
}

/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */

@keyframes wobble {
  from {
    transform: none;
  }

  15% {
    transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);
  }

  30% {
    transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);
  }

  45% {
    transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);
  }

  60% {
    transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);
  }

  75% {
    transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);
  }

  to {
    transform: none;
  }
}

.wobble {
  animation-name: wobble;
}

@keyframes jello {
  from, 11.1%, to {
    transform: none;
  }

  22.2% {
    transform: skewX(-12.5deg) skewY(-12.5deg);
  }

  33.3% {
    transform: skewX(6.25deg) skewY(6.25deg);
  }

  44.4% {
    transform: skewX(-3.125deg) skewY(-3.125deg);
  }

  55.5% {
    transform: skewX(1.5625deg) skewY(1.5625deg);
  }

  66.6% {
    transform: skewX(-0.78125deg) skewY(-0.78125deg);
  }

  77.7% {
    transform: skewX(0.390625deg) skewY(0.390625deg);
  }

  88.8% {
    transform: skewX(-0.1953125deg) skewY(-0.1953125deg);
  }
}

.jello {
  animation-name: jello;
  transform-origin: center;
}

@keyframes bounceIn {
  from, 20%, 40%, 60%, 80%, to {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
  }

  0% {
    opacity: 0;
    transform: scale3d(.3, .3, .3);
  }

  20% {
    transform: scale3d(1.1, 1.1, 1.1);
  }

  40% {
    transform: scale3d(.9, .9, .9);
  }

  60% {
    opacity: 1;
    transform: scale3d(1.03, 1.03, 1.03);
  }

  80% {
    transform: scale3d(.97, .97, .97);
  }

  to {
    opacity: 1;
    transform: scale3d(1, 1, 1);
  }
}

.bounceIn {
  animation-name: bounceIn;
}

@keyframes bounceInDown {
  from, 60%, 75%, 90%, to {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
  }

  0% {
    opacity: 0;
    transform: translate3d(0, -3000px, 0);
  }

  60% {
    opacity: 1;
    transform: translate3d(0, 25px, 0);
  }

  75% {
    transform: translate3d(0, -10px, 0);
  }

  90% {
    transform: translate3d(0, 5px, 0);
  }

  to {
    transform: none;
  }
}

.bounceInDown {
  animation-name: bounceInDown;
}

@keyframes bounceInLeft {
  from, 60%, 75%, 90%, to {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
  }

  0% {
    opacity: 0;
    transform: translate3d(-3000px, 0, 0);
  }

  60% {
    opacity: 1;
    transform: translate3d(25px, 0, 0);
  }

  75% {
    transform: translate3d(-10px, 0, 0);
  }

  90% {
    transform: translate3d(5px, 0, 0);
  }

  to {
    transform: none;
  }
}

.bounceInLeft {
  animation-name: bounceInLeft;
}

@keyframes bounceInRight {
  from, 60%, 75%, 90%, to {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
  }

  from {
    opacity: 0;
    transform: translate3d(3000px, 0, 0);
  }

  60% {
    opacity: 1;
    transform: translate3d(-25px, 0, 0);
  }

  75% {
    transform: translate3d(10px, 0, 0);
  }

  90% {
    transform: translate3d(-5px, 0, 0);
  }

  to {
    transform: none;
  }
}

.bounceInRight {
  animation-name: bounceInRight;
}

@keyframes bounceInUp {
  from, 60%, 75%, 90%, to {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
  }

  from {
    opacity: 0;
    transform: translate3d(0, 3000px, 0);
  }

  60% {
    opacity: 1;
    transform: translate3d(0, -20px, 0);
  }

  75% {
    transform: translate3d(0, 10px, 0);
  }

  90% {
    transform: translate3d(0, -5px, 0);
  }

  to {
    transform: translate3d(0, 0, 0);
  }
}

.bounceInUp {
  animation-name: bounceInUp;
}

@keyframes bounceOut {
  20% {
    transform: scale3d(.9, .9, .9);
  }

  50%, 55% {
    opacity: 1;
    transform: scale3d(1.1, 1.1, 1.1);
  }

  to {
    opacity: 0;
    transform: scale3d(.3, .3, .3);
  }
}

.bounceOut {
  animation-name: bounceOut;
}

@keyframes bounceOutDown {
  20% {
    transform: translate3d(0, 10px, 0);
  }

  40%, 45% {
    opacity: 1;
    transform: translate3d(0, -20px, 0);
  }

  to {
    opacity: 0;
    transform: translate3d(0, 2000px, 0);
  }
}

.bounceOutDown {
  animation-name: bounceOutDown;
}

@keyframes bounceOutLeft {
  20% {
    opacity: 1;
    transform: translate3d(20px, 0, 0);
  }

  to {
    opacity: 0;
    transform: translate3d(-2000px, 0, 0);
  }
}

.bounceOutLeft {
  animation-name: bounceOutLeft;
}

@keyframes bounceOutRight {
  20% {
    opacity: 1;
    transform: translate3d(-20px, 0, 0);
  }

  to {
    opacity: 0;
    transform: translate3d(2000px, 0, 0);
  }
}

.bounceOutRight {
  animation-name: bounceOutRight;
}

@keyframes bounceOutUp {
  20% {
    transform: translate3d(0, -10px, 0);
  }

  40%, 45% {
    opacity: 1;
    transform: translate3d(0, 20px, 0);
  }

  to {
    opacity: 0;
    transform: translate3d(0, -2000px, 0);
  }
}

.bounceOutUp {
  animation-name: bounceOutUp;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

.fadeIn {
  animation-name: fadeIn;
}

@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translate3d(0, -100%, 0);
  }

  to {
    opacity: 1;
    transform: none;
  }
}

.fadeInDown {
  animation-name: fadeInDown;
}

@keyframes fadeInDownBig {
  from {
    opacity: 0;
    transform: translate3d(0, -2000px, 0);
  }

  to {
    opacity: 1;
    transform: none;
  }
}

.fadeInDownBig {
  animation-name: fadeInDownBig;
}

@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translate3d(-100%, 0, 0);
  }

  to {
    opacity: 1;
    transform: none;
  }
}

.fadeInLeft {
  animation-name: fadeInLeft;
}

@keyframes fadeInLeftBig {
  from {
    opacity: 0;
    transform: translate3d(-2000px, 0, 0);
  }

  to {
    opacity: 1;
    transform: none;
  }
}

.fadeInLeftBig {
  animation-name: fadeInLeftBig;
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translate3d(100%, 0, 0);
  }

  to {
    opacity: 1;
    transform: none;
  }
}

.fadeInRight {
  animation-name: fadeInRight;
}

@keyframes fadeInRightBig {
  from {
    opacity: 0;
    transform: translate3d(2000px, 0, 0);
  }

  to {
    opacity: 1;
    transform: none;
  }
}

.fadeInRightBig {
  animation-name: fadeInRightBig;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translate3d(0, 100%, 0);
  }

  to {
    opacity: 1;
    transform: none;
  }
}

.fadeInUp {
  animation-name: fadeInUp;
}

@keyframes fadeInUpBig {
  from {
    opacity: 0;
    transform: translate3d(0, 2000px, 0);
  }

  to {
    opacity: 1;
    transform: none;
  }
}

.fadeInUpBig {
  animation-name: fadeInUpBig;
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

.fadeOut {
  animation-name: fadeOut;
}

@keyframes fadeOutDown {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    transform: translate3d(0, 100%, 0);
  }
}

.fadeOutDown {
  animation-name: fadeOutDown;
}

@keyframes fadeOutDownBig {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    transform: translate3d(0, 2000px, 0);
  }
}

.fadeOutDownBig {
  animation-name: fadeOutDownBig;
}

@keyframes fadeOutLeft {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    transform: translate3d(-100%, 0, 0);
  }
}

.fadeOutLeft {
  animation-name: fadeOutLeft;
}

@keyframes fadeOutLeftBig {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    transform: translate3d(-2000px, 0, 0);
  }
}

.fadeOutLeftBig {
  animation-name: fadeOutLeftBig;
}

@keyframes fadeOutRight {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    transform: translate3d(100%, 0, 0);
  }
}

.fadeOutRight {
  animation-name: fadeOutRight;
}

@keyframes fadeOutRightBig {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    transform: translate3d(2000px, 0, 0);
  }
}

.fadeOutRightBig {
  animation-name: fadeOutRightBig;
}

@keyframes fadeOutUp {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    transform: translate3d(0, -100%, 0);
  }
}

.fadeOutUp {
  animation-name: fadeOutUp;
}

@keyframes fadeOutUpBig {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    transform: translate3d(0, -2000px, 0);
  }
}

.fadeOutUpBig {
  animation-name: fadeOutUpBig;
}

@keyframes flip {
  from {
    transform: perspective(400px) rotate3d(0, 1, 0, -360deg);
    animation-timing-function: ease-out;
  }

  40% {
    transform: perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -190deg);
    animation-timing-function: ease-out;
  }

  50% {
    transform: perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -170deg);
    animation-timing-function: ease-in;
  }

  80% {
    transform: perspective(400px) scale3d(.95, .95, .95);
    animation-timing-function: ease-in;
  }

  to {
    transform: perspective(400px);
    animation-timing-function: ease-in;
  }
}

.animated.flip {
  -webkit-backface-visibility: visible;
  backface-visibility: visible;
  animation-name: flip;
}

@keyframes flipInX {
  from {
    transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
    animation-timing-function: ease-in;
    opacity: 0;
  }

  40% {
    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
    animation-timing-function: ease-in;
  }

  60% {
    transform: perspective(400px) rotate3d(1, 0, 0, 10deg);
    opacity: 1;
  }

  80% {
    transform: perspective(400px) rotate3d(1, 0, 0, -5deg);
  }

  to {
    transform: perspective(400px);
  }
}

.flipInX {
  -webkit-backface-visibility: visible !important;
  backface-visibility: visible !important;
  animation-name: flipInX;
}

@keyframes flipInY {
  from {
    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
    animation-timing-function: ease-in;
    opacity: 0;
  }

  40% {
    transform: perspective(400px) rotate3d(0, 1, 0, -20deg);
    animation-timing-function: ease-in;
  }

  60% {
    transform: perspective(400px) rotate3d(0, 1, 0, 10deg);
    opacity: 1;
  }

  80% {
    transform: perspective(400px) rotate3d(0, 1, 0, -5deg);
  }

  to {
    transform: perspective(400px);
  }
}

.flipInY {
  -webkit-backface-visibility: visible !important;
  backface-visibility: visible !important;
  animation-name: flipInY;
}

@keyframes flipOutX {
  from {
    transform: perspective(400px);
  }

  30% {
    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
    opacity: 1;
  }

  to {
    transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
    opacity: 0;
  }
}

.flipOutX {
  animation-name: flipOutX;
  -webkit-backface-visibility: visible !important;
  backface-visibility: visible !important;
}

@keyframes flipOutY {
  from {
    transform: perspective(400px);
  }

  30% {
    transform: perspective(400px) rotate3d(0, 1, 0, -15deg);
    opacity: 1;
  }

  to {
    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
    opacity: 0;
  }
}

.flipOutY {
  -webkit-backface-visibility: visible !important;
  backface-visibility: visible !important;
  animation-name: flipOutY;
}

@keyframes lightSpeedIn {
  from {
    transform: translate3d(100%, 0, 0) skewX(-30deg);
    opacity: 0;
  }

  60% {
    transform: skewX(20deg);
    opacity: 1;
  }

  80% {
    transform: skewX(-5deg);
    opacity: 1;
  }

  to {
    transform: none;
    opacity: 1;
  }
}

.lightSpeedIn {
  animation-name: lightSpeedIn;
  animation-timing-function: ease-out;
}

@keyframes lightSpeedOut {
  from {
    opacity: 1;
  }

  to {
    transform: translate3d(100%, 0, 0) skewX(30deg);
    opacity: 0;
  }
}

.lightSpeedOut {
  animation-name: lightSpeedOut;
  animation-timing-function: ease-in;
}

@keyframes rotateIn {
  from {
    transform-origin: center;
    transform: rotate3d(0, 0, 1, -200deg);
    opacity: 0;
  }

  to {
    transform-origin: center;
    transform: none;
    opacity: 1;
  }
}

.rotateIn {
  animation-name: rotateIn;
}

@keyframes rotateInDownLeft {
  from {
    transform-origin: left bottom;
    transform: rotate3d(0, 0, 1, -45deg);
    opacity: 0;
  }

  to {
    transform-origin: left bottom;
    transform: none;
    opacity: 1;
  }
}

.rotateInDownLeft {
  animation-name: rotateInDownLeft;
}

@keyframes rotateInDownRight {
  from {
    transform-origin: right bottom;
    transform: rotate3d(0, 0, 1, 45deg);
    opacity: 0;
  }

  to {
    transform-origin: right bottom;
    transform: none;
    opacity: 1;
  }
}

.rotateInDownRight {
  animation-name: rotateInDownRight;
}

@keyframes rotateInUpLeft {
  from {
    transform-origin: left bottom;
    transform: rotate3d(0, 0, 1, 45deg);
    opacity: 0;
  }

  to {
    transform-origin: left bottom;
    transform: none;
    opacity: 1;
  }
}

.rotateInUpLeft {
  animation-name: rotateInUpLeft;
}

@keyframes rotateInUpRight {
  from {
    transform-origin: right bottom;
    transform: rotate3d(0, 0, 1, -90deg);
    opacity: 0;
  }

  to {
    transform-origin: right bottom;
    transform: none;
    opacity: 1;
  }
}

.rotateInUpRight {
  animation-name: rotateInUpRight;
}

@keyframes rotateOut {
  from {
    transform-origin: center;
    opacity: 1;
  }

  to {
    transform-origin: center;
    transform: rotate3d(0, 0, 1, 200deg);
    opacity: 0;
  }
}

.rotateOut {
  animation-name: rotateOut;
}

@keyframes rotateOutDownLeft {
  from {
    transform-origin: left bottom;
    opacity: 1;
  }

  to {
    transform-origin: left bottom;
    transform: rotate3d(0, 0, 1, 45deg);
    opacity: 0;
  }
}

.rotateOutDownLeft {
  animation-name: rotateOutDownLeft;
}

@keyframes rotateOutDownRight {
  from {
    transform-origin: right bottom;
    opacity: 1;
  }

  to {
    transform-origin: right bottom;
    transform: rotate3d(0, 0, 1, -45deg);
    opacity: 0;
  }
}

.rotateOutDownRight {
  animation-name: rotateOutDownRight;
}

@keyframes rotateOutUpLeft {
  from {
    transform-origin: left bottom;
    opacity: 1;
  }

  to {
    transform-origin: left bottom;
    transform: rotate3d(0, 0, 1, -45deg);
    opacity: 0;
  }
}

.rotateOutUpLeft {
  animation-name: rotateOutUpLeft;
}

@keyframes rotateOutUpRight {
  from {
    transform-origin: right bottom;
    opacity: 1;
  }

  to {
    transform-origin: right bottom;
    transform: rotate3d(0, 0, 1, 90deg);
    opacity: 0;
  }
}

.rotateOutUpRight {
  animation-name: rotateOutUpRight;
}

@keyframes hinge {
  0% {
    transform-origin: top left;
    animation-timing-function: ease-in-out;
  }

  20%, 60% {
    transform: rotate3d(0, 0, 1, 80deg);
    transform-origin: top left;
    animation-timing-function: ease-in-out;
  }

  40%, 80% {
    transform: rotate3d(0, 0, 1, 60deg);
    transform-origin: top left;
    animation-timing-function: ease-in-out;
    opacity: 1;
  }

  to {
    transform: translate3d(0, 700px, 0);
    opacity: 0;
  }
}

.hinge {
  animation-name: hinge;
}

@keyframes jackInTheBox {
  from {
    opacity: 0;
    transform: scale(0.1) rotate(30deg);
    transform-origin: center bottom;
  }

  50% {
    transform: rotate(-10deg);
  }

  70% {
    transform: rotate(3deg);
  }

  to {
    opacity: 1;
    transform: scale(1);
  }
}

.jackInTheBox {
  animation-name: jackInTheBox;
}

/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */

@keyframes rollIn {
  from {
    opacity: 0;
    transform: translate3d(-100%, 0, 0) rotate3d(0, 0, 1, -120deg);
  }

  to {
    opacity: 1;
    transform: none;
  }
}

.rollIn {
  animation-name: rollIn;
}

/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */

@keyframes rollOut {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
    transform: translate3d(100%, 0, 0) rotate3d(0, 0, 1, 120deg);
  }
}

.rollOut {
  animation-name: rollOut;
}

@keyframes zoomIn {
  from {
    opacity: 0;
    transform: scale3d(.3, .3, .3);
  }

  50% {
    opacity: 1;
  }
}

.zoomIn {
  animation-name: zoomIn;
}

@keyframes zoomInDown {
  from {
    opacity: 0;
    transform: scale3d(.1, .1, .1) translate3d(0, -1000px, 0);
    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
  }

  60% {
    opacity: 1;
    transform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
  }
}

.zoomInDown {
  animation-name: zoomInDown;
}

@keyframes zoomInLeft {
  from {
    opacity: 0;
    transform: scale3d(.1, .1, .1) translate3d(-1000px, 0, 0);
    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
  }

  60% {
    opacity: 1;
    transform: scale3d(.475, .475, .475) translate3d(10px, 0, 0);
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
  }
}

.zoomInLeft {
  animation-name: zoomInLeft;
}

@keyframes zoomInRight {
  from {
    opacity: 0;
    transform: scale3d(.1, .1, .1) translate3d(1000px, 0, 0);
    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
  }

  60% {
    opacity: 1;
    transform: scale3d(.475, .475, .475) translate3d(-10px, 0, 0);
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
  }
}

.zoomInRight {
  animation-name: zoomInRight;
}

@keyframes zoomInUp {
  from {
    opacity: 0;
    transform: scale3d(.1, .1, .1) translate3d(0, 1000px, 0);
    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
  }

  60% {
    opacity: 1;
    transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
  }
}

.zoomInUp {
  animation-name: zoomInUp;
}

@keyframes zoomOut {
  from {
    opacity: 1;
  }

  50% {
    opacity: 0;
    transform: scale3d(.3, .3, .3);
  }

  to {
    opacity: 0;
  }
}

.zoomOut {
  animation-name: zoomOut;
}

@keyframes zoomOutDown {
  40% {
    opacity: 1;
    transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);
    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
  }

  to {
    opacity: 0;
    transform: scale3d(.1, .1, .1) translate3d(0, 2000px, 0);
    transform-origin: center bottom;
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
  }
}

.zoomOutDown {
  animation-name: zoomOutDown;
}

@keyframes zoomOutLeft {
  40% {
    opacity: 1;
    transform: scale3d(.475, .475, .475) translate3d(42px, 0, 0);
  }

  to {
    opacity: 0;
    transform: scale(.1) translate3d(-2000px, 0, 0);
    transform-origin: left center;
  }
}

.zoomOutLeft {
  animation-name: zoomOutLeft;
}

@keyframes zoomOutRight {
  40% {
    opacity: 1;
    transform: scale3d(.475, .475, .475) translate3d(-42px, 0, 0);
  }

  to {
    opacity: 0;
    transform: scale(.1) translate3d(2000px, 0, 0);
    transform-origin: right center;
  }
}

.zoomOutRight {
  animation-name: zoomOutRight;
}

@keyframes zoomOutUp {
  40% {
    opacity: 1;
    transform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);
    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
  }

  to {
    opacity: 0;
    transform: scale3d(.1, .1, .1) translate3d(0, -2000px, 0);
    transform-origin: center bottom;
    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
  }
}

.zoomOutUp {
  animation-name: zoomOutUp;
}

@keyframes slideInDown {
  from {
    transform: translate3d(0, -100%, 0);
    visibility: visible;
  }

  to {
    transform: translate3d(0, 0, 0);
  }
}

.slideInDown {
  animation-name: slideInDown;
}

@keyframes slideInLeft {
  from {
    transform: translate3d(-100%, 0, 0);
    visibility: visible;
  }

  to {
    transform: translate3d(0, 0, 0);
  }
}

.slideInLeft {
  animation-name: slideInLeft;
}

@keyframes slideInRight {
  from {
    transform: translate3d(100%, 0, 0);
    visibility: visible;
  }

  to {
    transform: translate3d(0, 0, 0);
  }
}

.slideInRight {
  animation-name: slideInRight;
}

@keyframes slideInUp {
  from {
    transform: translate3d(0, 100%, 0);
    visibility: visible;
  }

  to {
    transform: translate3d(0, 0, 0);
  }
}

.slideInUp {
  animation-name: slideInUp;
}

@keyframes slideOutDown {
  from {
    transform: translate3d(0, 0, 0);
  }

  to {
    visibility: hidden;
    transform: translate3d(0, 100%, 0);
  }
}

.slideOutDown {
  animation-name: slideOutDown;
}

@keyframes slideOutLeft {
  from {
    transform: translate3d(0, 0, 0);
  }

  to {
    visibility: hidden;
    transform: translate3d(-100%, 0, 0);
  }
}

.slideOutLeft {
  animation-name: slideOutLeft;
}

@keyframes slideOutRight {
  from {
    transform: translate3d(0, 0, 0);
  }

  to {
    visibility: hidden;
    transform: translate3d(100%, 0, 0);
  }
}

.slideOutRight {
  animation-name: slideOutRight;
}

@keyframes slideOutUp {
  from {
    transform: translate3d(0, 0, 0);
  }

  to {
    visibility: hidden;
    transform: translate3d(0, -100%, 0);
  }
}

.slideOutUp {
  animation-name: slideOutUp;
}

.breadcrumbs {
	font-size: $font-size-small;
	margin-bottom: $text-margin-bottom;

    & ul {
        @include flex;
        @include flex-items-middle;
    }
    &.push-center ul {
        @include flex-items-center;
    }
    &.push-right ul {
        @include flex-items-right;
    }
    & span,
    & a {
    	font-style: normal;
    	padding: 0 10px;
    	display: inline-block;
    	white-space: nowrap;
    }
    & li {
        &:after {
        	display: inline-block;
        	content: '/';
        	color: rgba(0, 0, 0, .3);
        }
        &:last-child:after {
        	display: none;
        }
        &:first-child span,
        &:first-child a {
            padding-left: 0;
        }
        &.active a {
            color: $color-text;
        	text-decoration: none;
        	cursor: text;
        }
    }
}

button,
.button, {
	display: inline-block;
    width: auto;
    height: $button-height;
    padding: 0 $button-padding-rl;
    background-color: $color-button-primary;
	border: 1px solid transparent;
    border-radius: $button-border-radius;
    color: $color-button-primary-text;
    font-size: $button-font-size;
    font-family: $buttons-font-family;
    font-weight: $button-font-weight;
    line-height: $button-base-line;
    text-decoration: none;
    text-align: center;
    cursor: pointer;
	vertical-align: middle;
    transition: 200ms;
	-webkit-appearance: none;

	& i {
        position: relative;
        top: 1px;
        margin: 0 2px;
	}
}

button:hover,
.button:hover,
button:focus,
.button:focus {
    outline: none;
    text-decoration: none;
    color: $color-button-primary-text;
    background-color: lighten($color-button-primary, 10%);
}

button.hover:hover,
.button.hover:hover,
button.hover:focus,
.button.hover:focus {
	background-color: $color-button-hover;
}

// Disabled
.button:disabled,
.button.disabled {
	cursor: default;
	font-style: normal;
	color: rgba($color-button-primary-text, .7);
	background-color: rgba($color-button-primary, .7);
}

// Outline
.button.outline {
    background: none;
    border-width: 2px;
    border-color: $color-button-primary;
    color: $color-button-primary;

    &:hover {
        background: none;
        color: rgba($color-button-primary, .6);
        border-color: rgba($color-button-primary, .5);
    }
    &:disabled,
    &.disabled {
        background: none;
        color: rgba($color-button-primary, .7);
    	border-color: rgba($color-button-primary, .5);
    }

    &.hover:hover {
        color: $color-button-primary-text;
        border-color: $color-button-hover;
        background-color: $color-button-hover;
    }
}

// White
.button.inverted {
    @include button(#000, #fff);

    &:hover {
        opacity: .7;
    }
}

// Raised
.button.raised {
    box-shadow: 0 1px 3px rgba(0, 0, 0, .3);
}

// Upper
.button.upper {
    text-transform: uppercase;
    letter-spacing: .04em;
}

// Round
.button.round {
    border-radius: $button-height / 2 ;
}

// Secondary
.button.secondary {
	@include button($color-button-secondary-text, $color-button-secondary);
}

// Text Colors
.error     { color: $color-error; }
.success   { color: $color-success; }
.warning   { color: $color-warning; }
.focus     { color: $color-focus; }

// Background Colors
.bg-error      { background-color: $color-error; }
.bg-success    { background-color: $color-success; }
.bg-warning    { background-color: $color-warning; }
.bg-focus      { background-color: $color-focus; }

// Fieldset
fieldset {
    font-family: inherit;
    border: 1px solid rgba(0, 0, 0, .1);
    padding: 2rem;
    margin-bottom: 2rem;
    margin-top: 2rem;
}
legend {
	font-weight: bold;
	font-size: $font-size-small;
	text-transform: uppercase;
	padding: 0 1rem;
	margin-left: -1rem;
	top: 2px;
	position: relative;
	line-height: 0;
}
input,
textarea,
select {
    display: block;
    width: 100%;
	font-family: $input-font-family;
	font-size: $input-font-size;
	height: $input-height;
    outline: none;
    vertical-align: middle;
	background-color: $input-background-color;
    border: $input-border-width solid $input-border-color;
    border-radius: $input-border-radius;
    box-shadow: $input-box-shadow;
    padding: 0 $input-padding-rl;
}

// States
input,
textarea,
select {
    &:focus {
    	outline: none;
    	background-color: $input-focus-background-color;
    	border-color: $input-focus-border-color;
        box-shadow: $input-focus-box-shadow;
    }
    &.error {
	    background-color: rgba($input-error-background-color, .1);
    	border: $input-border-width solid lighten($input-error-border-color, 15%);
    	&:focus {
            border-color: $input-error-border-color;
            box-shadow: $input-error-focus-box-shadow;
    	}
	}
    &.success  {
    	background-color: rgba($input-success-background-color, .1);
    	border: $input-border-width solid lighten($input-success-border-color, 15%);
    	&:focus {
            border-color: $input-success-border-color;
            box-shadow: $input-success-focus-box-shadow;
    	}
    }
    &:disabled,
    &.disabled {
    	resize: none;
    	opacity: $input-disabled-opacity;
    	cursor: default;
    	font-style: italic;
    	color: $input-disabled-color;
	}
}
select {
    -webkit-appearance: none;
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="9" height="12" viewBox="0 0 9 12"><path fill="#5e6c75" d="M0.722,4.823L-0.01,4.1,4.134-.01,4.866,0.716Zm7.555,0L9.01,4.1,4.866-.01l-0.732.726ZM0.722,7.177L-0.01,7.9,4.134,12.01l0.732-.726Zm7.555,0L9.01,7.9,4.866,12.01l-0.732-.726Z"/></svg>');
    background-repeat: no-repeat;
    background-position: right 1rem center;
}
select[multiple] {
    background-image: none;
    height: auto;
    padding: .5rem .75rem;
}
textarea {
    height: auto;
    padding: $input-textarea-padding-tb $input-padding-rl;
    vertical-align: top;
}
input[type="file"] {
    width: auto;
    border: none;
    padding: 0;
    height: auto;
    background: none;
    box-shadow: none;
    display: inline-block;
}
input[type="search"],
input.search {
    background-repeat: no-repeat;
    background-position: 8px 53%;
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"><path fill="#000" fill-opacity="0.4" d="M14.891,14.39l-0.5.5a0.355,0.355,0,0,1-.5,0L9.526,10.529a5.3,5.3,0,1,1,2.106-4.212,5.268,5.268,0,0,1-1.1,3.21l4.362,4.362A0.354,0.354,0,0,1,14.891,14.39ZM6.316,2.418a3.9,3.9,0,1,0,3.9,3.9A3.9,3.9,0,0,0,6.316,2.418Z"/></svg>');
    padding-left: 32px;
}
input[type="radio"],
input[type="checkbox"] {
    display: inline-block;
    width: auto;
    height: auto;
    padding: 0;
    &:focus {
        box-shadow: none;
    }
}
label {
    display: block;
    color: $color-text;
    margin-bottom: 4px;
    font-size: $font-size - 1px;

    &.checkbox,
    & .desc,
    & .success,
    & .error {
    	text-transform: none;
    	font-weight: normal;
    }
    &.checkbox {
        font-size: $font-size;
        line-height: $base-line;
    	cursor: pointer;
    	color: inherit;

        & input {
            margin-top: 0;
        }
    }

}
.form-checkboxes {
    & label.checkbox {
        display: inline-block;
        margin-right: 16px;
	}
}
.req {
    position: relative;
    top: 1px;
	font-weight: bold;
	color: $color-error;
	font-size: 110%;
}
.desc {
    color: rgba($color-text, .5);
    font-size: $font-size - 4px;
    line-height: $base-line - 4px;
}
.form-buttons {
    & button,
    & .button {
        margin-right: 8px;
    }
}
form,
.form-item, {
    margin-bottom: 2rem;
}
.form {
    & span.success,
    & span.error {
        font-size: $font-size-small;
        margin-left: 4px;
    }
}
.form-inline {
    & input,
    & textarea,
    & select {
        display: inline-block;
        width: auto;
    }
}


// Append & Prepend
.append,
.prepend {
	@include flex;

	& input {
		@include flex-item-one;
	}
	& .button,
	& span {
		@include flex-item-shrink;
    }
	& span {
        @include flex;
        @include flex-items-column;
        @include flex-items-center;

		font-weight: normal;
		border: $input-border-width solid $input-border-color;
		background-color: #f8f8f8;
		padding: 0 .875rem;
		color: rgba(0, 0, 0, .5);
		font-size: $font-size-small;
		white-space: nowrap;
	}
}
.prepend {
    & input {
        border-radius: 0 $input-border-radius $input-border-radius 0;
    }
    & .button {
        margin-right: -1px;
        border-radius: $input-border-radius 0 0 $input-border-radius !important;
    }
    & span {
        border-right: none;
        border-radius: $input-border-radius 0 0 $input-border-radius;
    }
}
.append {
    & input {
        border-radius: $input-border-radius 0 0 $input-border-radius;
    }
    & .button {
        margin-left: -1px;
        border-radius: 0 $input-border-radius $input-border-radius 0 !important;
    }
    & span {
        border-left: none;
        border-radius: 0 $input-border-radius $input-border-radius 0;
    }
}

// horizontal
.form.horizontal {
    .form-item {
        display: -ms-flexbox;
        display: flex;
        -ms-flex-direction: row;
        flex-direction: row;
        -ms-flex-wrap: wrap;
        flex-wrap: wrap;

        label {
            width: 30%;
        }

        > div,
        .input {
            width: 70%;
        }
    }
}

@include breakpoint(sm) {
    .form.horizontal {
        .form-item {
            display: block;

            label,
            > div,
            .input {
                width: 100%;
            }
        }
    }

}
// Grid Row
.row {
    @include grid-row;

    // Gutters
    &.gutters,
    &.gutters > .row {
        margin-left: -$grid-gutter;

        @include breakpoint(sm) {
            margin-left: 0;
        }

        & > .col {
            margin-left: $grid-gutter;

            @include breakpoint(sm) {
                margin-left: 0;
            }
        }
    }
	&.around {
		@include flex-items-space-around;
	}
	&.between {
		@include flex-items-space-between;
	}
	&.auto {
    	& .col {
            flex: 1 1 0%;
        }
	}
}

// Grid Columns
@include generate-grid-columns;

// Offset
[class^='offset-'],
[class*=' offset-'] {
    @include breakpoint(sm) {
        margin-left: 0;
    }
}

// Ordering
.first    { order: -1; }
.last     { order: 1;  }

@include breakpoint(sm) {
    .row {

        & .col {
            margin-left: 0;
            width: 100%;
        }
        &.gutters {
            & .col {
                margin-bottom: $text-margin-bottom;
            }
        }
    }
	.first-sm { order: -1; }
	.last-sm  { order: 1;  }
}
@font-face {
  font-family: 'Kube';
  src: url("data:application/x-font-ttf;charset=utf-8;base64,AAEAAAALAIAAAwAwT1MvMg8SBfgAAAC8AAAAYGNtYXAXVtKOAAABHAAAAFRnYXNwAAAAEAAAAXAAAAAIZ2x5ZsMn2SAAAAF4AAADeGhlYWQMP9EUAAAE8AAAADZoaGVhB8IDzQAABSgAAAAkaG10eCYABd4AAAVMAAAAMGxvY2EFWASuAAAFfAAAABptYXhwABcAmwAABZgAAAAgbmFtZfMJxocAAAW4AAABYnBvc3QAAwAAAAAHHAAAACAAAwPHAZAABQAAApkCzAAAAI8CmQLMAAAB6wAzAQkAAAAAAAAAAAAAAAAAAAABEAAAAAAAAAAAAAAAAAAAAABAAADpBwPA/8AAQAPAAEAAAAABAAAAAAAAAAAAAAAgAAAAAAADAAAAAwAAABwAAQADAAAAHAADAAEAAAAcAAQAOAAAAAoACAACAAIAAQAg6Qf//f//AAAAAAAg6QD//f//AAH/4xcEAAMAAQAAAAAAAAAAAAAAAQAB//8ADwABAAAAAAAAAAAAAgAANzkBAAAAAAEAAAAAAAAAAAACAAA3OQEAAAAAAQAAAAAAAAAAAAIAADc5AQAAAAAKAAAAAAQAA8AADwAUACQANABEAFYAaAB4AIgAmAAAEyIGFREUFjMhMjY1ETQmIwUhESEREzgBMSIGFRQWMzI2NTQmIzM4ATEiBhUUFjMyNjU0JiMzOAExIgYVFBYzMjY1NCYjATIWHQEUBiMiJj0BNDYzOAExITIWHQEUBiMiJj0BNDYzOAExATgBMSIGFRQWMzI2NTQmIzM4ATEiBhUUFjMyNjU0JiMzOAExIgYVFBYzMjY1NCYjwFBwcFACgFBwcFD9IQM+/MKrHioqHh4qKh70HioqHh4qKh70HisrHh0rKh7+MBQdHRQUHBwUAbgUHBwUFB0dFP4wHioqHh4qKh70HioqHh4qKh70HisrHh0rKh4DYHBQ/iBQcHBQAeBQcF/9XwKh/n8qHh4qKh4eKioeHioqHh4qKh4eKioeHioCQBwVjhUcHBWOFRwcFY4VHBwVjhUc/rAqHh4qKh4eKioeHioqHh4qKh4eKioeHioAAAABAQAAwAMAAcAACwAAAQcXBycHJzcnNxc3AwDMAjMDAzMCzDTMzAGVqAIrAgIrAqgrqKgAAQGAAEACgAJAAAsAACUnByc3JzcXNxcHFwJVqAIrAgIrAqgrqKhAzAIzAwMzAsw0zMwAAAEBgABAAoACQAALAAABFzcXBxcHJwcnNycBq6gCKwICKwKoK6ioAkDMAjMDAzMCzDTMzAABAQAAwAMAAcAACwAAJTcnNxc3FwcXBycHAQDMAjMDAzMCzDTMzOuoAisCAisCqCuoqAAAAgAP/+UD1AOqAAQACAAAEwEHATcFAScBSwOJPPx3PAOJ/Hc8A4kDqvx3PAOJPDz8dzwDiQAAAAADAIAAgAOAAwAAAwAHAAsAADc1IRUBIRUhESEVIYADAP0AAwD9AAMA/QCAgIABgIABgIAAAgBPAA8DsgNxABgALQAAJQcBDgEjIi4CNTQ+AjMyHgIVFAYHAQEiDgIVFB4CMzI+AjU0LgIjA7JY/t4lWTBBc1YxMVZzQUFzVTIcGQEi/dgxVkAlJUBWMTFWQCUlQFYxZ1gBIRkcMlVzQUFzVjExVnNBMFkm/uACuyVAVjExVkAlJUBWMTFWQCUAAAABAAAAAQAABhlWm18PPPUACwQAAAAAANSQRjkAAAAA1JBGOQAA/+UEAAPAAAAACAACAAAAAAAAAAEAAAPA/8AAAAQAAAAAAAQAAAEAAAAAAAAAAAAAAAAAAAAMBAAAAAAAAAAAAAAAAgAAAAQAAAAEAAEABAABgAQAAYAEAAEABAAADwQAAIAEAABPAAAAAAAKABQAHgDYAPIBDAEmAUABXAF2AbwAAAABAAAADACZAAoAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAADgCuAAEAAAAAAAEABAAAAAEAAAAAAAIABwBFAAEAAAAAAAMABAAtAAEAAAAAAAQABABaAAEAAAAAAAUACwAMAAEAAAAAAAYABAA5AAEAAAAAAAoAGgBmAAMAAQQJAAEACAAEAAMAAQQJAAIADgBMAAMAAQQJAAMACAAxAAMAAQQJAAQACABeAAMAAQQJAAUAFgAXAAMAAQQJAAYACAA9AAMAAQQJAAoANACAS3ViZQBLAHUAYgBlVmVyc2lvbiAxLjAAVgBlAHIAcwBpAG8AbgAgADEALgAwS3ViZQBLAHUAYgBlS3ViZQBLAHUAYgBlUmVndWxhcgBSAGUAZwB1AGwAYQByS3ViZQBLAHUAYgBlRm9udCBnZW5lcmF0ZWQgYnkgSWNvTW9vbi4ARgBvAG4AdAAgAGcAZQBuAGUAcgBhAHQAZQBkACAAYgB5ACAASQBjAG8ATQBvAG8AbgAuAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==") format('truetype');
  font-weight: normal;
  font-style: normal;
}

[class^="kube-"], [class*=" kube-"], .close, .caret {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'Kube' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;

  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.kube-calendar:before {
  content: "\e900";
}
.caret.down:before,
.kube-caret-down:before {
  content: "\e901";
}
.caret.left:before,
.kube-caret-left:before {
  content: "\e902";
}
.caret.right:before,
.kube-caret-right:before {
  content: "\e903";
}
.caret.up:before,
.kube-caret-up:before {
  content: "\e904";
}
.close:before,
.kube-close:before {
  content: "\e905";
}
.kube-menu:before {
  content: "\e906";
}
.kube-search:before {
  content: "\e907";
}
.label {
    display: inline-block;
    font-size: 13px;
    background: #eee;
    line-height: 18px;
    padding: 0 10px;
    font-weight: 600;
    color: $color-text;
    border: 1px solid transparent;
    vertical-align: middle;
    text-decoration: none;
    border-radius: 4px;
	& a,
	& a:hover {
		color: inherit;
		text-decoration: none;
	}
}
.label.big {
    font-size: $font-size-small;
    line-height: 24px;
    padding: 0 12px;
}
.label.upper {
    text-transform: uppercase;
    font-size: 11px;
}

// Outline
.label.outline {
    background: none;
    border-color: #bdbdbd;
}

// Badges
.label.badge {
    text-align: center;
    border-radius: 50%;
    padding: 0 6px;
    &.big {
        padding: 0 8px;
    }
}

// Tag
.label.tag {
    padding: 0;
    background: none;
    border: none;
    text-transform: uppercase;
    font-size: $font-size-small - 3px;
    &.big {
        font-size: $font-size-small - 1px;
    }
}

.label.success {
    @include label(#fff, $color-success);
}
.label.error {
    @include label(#fff, $color-error);
}
.label.warning {
    @include label(#000, $color-warning);
}
.label.focus {
    @include label(#fff, $color-focus);
}
.message {
    font-family: $monospace-font-family;
    font-size: $font-size-small;
    line-height: $base-line;
    background: #eee;
    color: $color-text;
    padding: 1rem;
    padding-right: 2.5em;
    padding-bottom: .75rem;
    margin-bottom: $text-margin-bottom;
    position: relative;

    & a {
        color: inherit;
    }
    & h2,
    & h3,
    & h4,
    & h5,
    & h6 {
        margin-bottom: 0;
    }
    & .close {
        position: absolute;
        right: 1rem;
        top: 1.1rem;
    }
}
.message.error {
    background: $color-error;
    color: #fff;
}
.message.success {
    background: $color-success;
    color: #fff;
}
.message.warning {
    background: $color-warning;
}
.message.focus {
    background: $color-focus;
    color: #fff;
}
.message.inverted {
    background: #fff;
}
.pagination {
    margin: $text-margin-bottom 0;
    font-size: $font-size-small;


    & ul {
        @include flex;

        margin: 0;
    }
    &.align-center  ul {
        @include flex-items-center;
    }
    & span,
    & a {
        border-radius: 3px;
        display: inline-block;
    	padding: 8px 12px;
    	line-height: 1;
    	white-space: nowrap;
    	border: 1px solid transparent;
    }
    & a {
    	text-decoration: none;
    	color: $color-text;
    	&:hover {
    		color: rgba(0, 0, 0, .5);
    		border-color: #eee;
    	}
    }
    & span,
    & li.active a {
    	color: rgba(0, 0, 0, .5);
    	border-color: #eee;
    	cursor: text;
    }
    &.upper {
    	font-size: $font-size-small - 2px;
    }
}

// Pager
.pager {
    & span {
        line-height: $base-line;
    }
    & span,
    & a {
        padding-left: 16px;
        padding-right: 16px;
	    border-radius: 64px;
        border-color: rgba(0, 0, 0, .1);
    }
    & li {
        @include flex-basis(50%);
    }
    & li.next {
	    text-align: right;
    }
    &.align-center li {
        @include flex-basis(auto);
        margin-left: 4px;
        margin-right: 4px;
    }
    &.flat {
        & span,
        & a {
            border: none;
            display: block;
            padding: 0;
        }
        & a {
            font-weight: bold;
            &:hover {
                background: none;
                text-decoration: underline;
            }
        }
    }
}

// Responsive
@include breakpoint(sm) {
    .pager.flat {
        & ul {
            @include flex-items-column;
        }
        & li {
            @include flex-basis(100%);

            margin-bottom: 8px;
            text-align: left;
        }
    }
}
// Push
.gutters .column.push-left,
.push-left  { margin-right: auto; }

.gutters .column.push-right,
.push-right  { margin-left: auto; }

.gutters .column.push-center,
.push-center { margin-left: auto; margin-right: auto; }

.gutters .column.push-middle,
.push-middle { margin-top:  auto; margin-bottom: auto; }

.push-bottom { margin-top:  auto; }

@include breakpoint(sm) {

    .gutters .column.push-left-sm,
    .push-left-sm   { margin-left: 0; }

    .gutters .column.push-center-sm,
    .push-center-sm { margin-left: auto; margin-right: auto;}

    .push-top-sm    { margin-top: 0;  }

}

// Flex Alignment
.align-middle {
    @include flex-items-middle;
}
.align-right {
    @include flex-items-right;
}
.align-center {
    @include flex-items-center;
}

@include breakpoint(sm) {
    .align-left-sm { @include flex-items-left; }
}

// Float
.float-right {
	float: right;
}
.float-left {
	float: left;
}
@include breakpoint(sm) {
    .float-right { float: none; }
    .float-left  { float: none; }
}

// Fixed
.fixed {
	position: fixed;
	top: 0;
	left: 0;
	// z-index: $z-over-content;
	width: 100%;
}
@media print {

    * {
        background: transparent !important;
        color: black !important;
        box-shadow: none !important;
        text-shadow: none !important;
    }

    a,
    a:visited {
        text-decoration: underline;
    }

    pre, blockquote {
        border: 1px solid #999;
        page-break-inside: avoid;
    }

    p, h2, h3 {
        orphans: 3;
        widows: 3;
    }

    thead { display: table-header-group; }
    tr, img { page-break-inside: avoid; }
    img { max-width: 100% !important; }
    h2, h3, h4 { page-break-after: avoid; }
    @page { margin: 0.5cm; }

}

// http://meyerweb.com/eric/tools/css/reset/
//   v2.0 | 20110126
//   License: none (public domain)

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    // font: inherit;
    vertical-align: baseline;
}
// HTML5 display-role reset for older browsers
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
    display: block;
}
body {
    line-height: 1;
}
blockquote, q {
    quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
    content: '';
    content: none;
}
table {
    border-collapse: collapse;
    border-spacing: 0;
}

img { display: block; }
a img { border:none } /* Gets rid of IE's blue borders */
textarea {resize: none;}
input:focus,
select:focus,
textarea:focus,
button:focus {
    outline: none;
}


// KUBO
* {
    outline: 0;
    -webkit-font-smoothing: antialiased;
    -webkit-overflow-scrolling: touch;
}
*,
:after,
:before{
    box-sizing: border-box;
}
html,
body {
    overflow-x: hidden;
}
html, body, div, article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
    position: relative;
}
img,
video,
audio {
    max-width: 100%;
}
img,
video {
    height: auto;
}
svg {
    max-height: 100%;
}
::-moz-focus-inner {
    border: 0;
    padding: 0;
}
input[type="radio"],
input[type="checkbox"] {
    vertical-align: middle;
    position: relative;
    bottom: 0.15rem;
    font-size: 115%;
    margin-right: 3px;
}
input[type="search"] {
    -webkit-appearance: textfield;
}
input[type="search"]::-webkit-search-decoration,
input[type="search"]::-webkit-search-cancel-button {
    -webkit-appearance: none;
}
// Width
.w5   { width: 5%;   }
.w10  { width: 10%;  }
.w15  { width: 15%;  }
.w20  { width: 20%;  }
.w25  { width: 25%;  }
.w30  { width: 30%;  }
.w35  { width: 35%;  }
.w40  { width: 40%;  }
.w45  { width: 45%;  }
.w50  { width: 50%;  }
.w55  { width: 55%;  }
.w60  { width: 60%;  }
.w65  { width: 65%;  }
.w70  { width: 70%;  }
.w75  { width: 75%;  }
.w80  { width: 80%;  }
.w85  { width: 85%;  }
.w90  { width: 90%;  }
.w95  { width: 95%;  }
.w100 { width: 100%; }

.w-auto { width: auto; }

// Max Width
.max-w5   { max-width: 5%;   }
.max-w10  { max-width: 10%;  }
.max-w15  { max-width: 15%;  }
.max-w20  { max-width: 20%;  }
.max-w25  { max-width: 25%;  }
.max-w30  { max-width: 30%;  }
.max-w35  { max-width: 35%;  }
.max-w40  { max-width: 40%;  }
.max-w45  { max-width: 45%;  }
.max-w50  { max-width: 50%;  }
.max-w55  { max-width: 55%;  }
.max-w60  { max-width: 60%;  }
.max-w65  { max-width: 65%;  }
.max-w70  { max-width: 70%;  }
.max-w75  { max-width: 75%;  }
.max-w80  { max-width: 80%;  }
.max-w85  { max-width: 85%;  }
.max-w90  { max-width: 90%;  }
.max-w95  { max-width: 95%;  }
.max-w100 { max-width: 100%; }

// Min Width
.min-w5   { min-width: 5%;   }
.min-w10  { min-width: 10%;  }
.min-w15  { min-width: 15%;  }
.min-w20  { min-width: 20%;  }
.min-w25  { min-width: 25%;  }
.min-w30  { min-width: 30%;  }
.min-w35  { min-width: 35%;  }
.min-w40  { min-width: 40%;  }
.min-w45  { min-width: 45%;  }
.min-w50  { min-width: 50%;  }
.min-w55  { min-width: 55%;  }
.min-w60  { min-width: 60%;  }
.min-w65  { min-width: 65%;  }
.min-w70  { min-width: 70%;  }
.min-w75  { min-width: 75%;  }
.min-w80  { min-width: 80%;  }
.min-w85  { min-width: 85%;  }
.min-w90  { min-width: 90%;  }
.min-w95  { min-width: 95%;  }
.min-w100 { min-width: 100%; }

// Height
.h25  { height: 25%;  }
.h50  { height: 50%;  }
.h100 { height: 100%; }
table {
	border-collapse: collapse;
	border-spacing: 0;
	max-width: 100%;
	width: 100%;
	empty-cells: show;
	font-size: $table-font-size;
	line-height: $table-base-line;
}
table caption {
    text-align: left;
    font-size: $font-size - 2px;
    font-weight: 500;
    color: rgba($color-text, .5);
}

th {
	text-align: left;
	font-weight: 700;
	vertical-align: bottom;
}
td {
	vertical-align: top;
}
tr.align-middle td,
td.align-middle {
    vertical-align: middle;
}
th,
td {
	padding: $table-padding-tb $table-padding-rl;
	border-bottom: $table-border;
	&:first-child {
		padding-left: 0;
	}
	&:last-child {
		padding-right: 0;
	}
}
tfoot th,
tfoot td {
	color: rgba($color-text, .5);
}

// Bordered
table.bordered {

	& td,
	& th {
		border: $table-border;
	}

}

// Striped
table.striped tr:nth-child(odd) td {
	background: $table-background-striped;
}

table.bordered,
table.striped {
	& td,
	& th {
		&:first-child {
			padding-left: $table-padding-rl;
		}
		&:last-child {
			padding-right: $table-padding-rl;
		}
	}
}

// Unstyled
table.unstyled {
	& td,
	& th {
		border: none;
		padding: 0;
	}
}
html,
body {
    font-size: $font-size;
    line-height: $base-line;
}
body {
    font-family: $text-font-family;
    color: $color-text;
    background-color: transparent;
}

p {
	line-height: $base-line;
}


// Links
a {
	color: $color-link;
}
a:hover {
	color: $color-link-hover;
}

// Headings
h1, h2, h3, h4, h5, h6 {
	color: $color-headings;
	font-family: $headings-font-family;
    line-height: $heading-base-line;
	text-rendering: optimizeLegibility;
    margin-bottom: $heading-margin-bottom;
}
h1,
.h1 {
    font-size: $heading-font-size-1;
}
h2,
.h2 {
    font-size: $heading-font-size-2;
}
h3,
.h3 {
    font-size: $heading-font-size-3;
}
h4,
.h4 {
    font-size: $heading-font-size-4;
}
h5,
.h5 {
    font-size: $heading-font-size-5;
}
h6,
.h6 {
    font-size: $heading-font-size-6;
}
h1 a, .h1 a,
h2 a, .h2 a,
h3 a, .h3 a,
h4 a, .h4 a,
h5 a, .h5 a,
h6 a, .h6 a {
  color: inherit;
}

// Lists
ul,
ol {
    &,
    & ul,
    & ol {
	    margin: 0 0 0 $text-margin-bottom;
	}
}

ol ol li {
	list-style-type: lower-alpha;
}
ol ol ol li {
	list-style-type: lower-roman;
}
nav {
    & ul,
    & ol {
        margin: 0;
	    list-style: none;
	    & ul,
	    & ol {
    	    margin-left: $text-margin-bottom;
	    }
	}
}
dl dt {
	font-weight: bold;
}
dd {
	margin-left: $text-margin-bottom;
}

// Block Tags
p, blockquote, hr, pre, ol, ul, dl, table, fieldset, figure, address, form {
	margin-bottom: $text-margin-bottom;
}
hr {
    border: none;
	border-bottom: 1px solid rgba(0, 0, 0, .1);
	margin-top: -1px;
}
blockquote {
	padding-left: 1rem;
	border-left: 4px solid rgba(0, 0, 0, .1);
	font-style: italic;
	color: rgba($color-text, .65);
	& p {
    	margin-bottom: .5rem;
	}
}

// Inline
time, cite, small, figcaption {
	font-size: 87.5%;
}
cite {
    opacity: .6;
}
abbr[title], dfn[title] {
	border-bottom: 1px dotted rgba(0, 0, 0, .5);
	cursor: help;
}
var {
    font-size: $font-size;
	opacity: .6;
	font-style: normal;
}
mark, code, samp, kbd {
    position: relative;
    top: -1px;
	padding: 4px 4px 2px 4px;
	display: inline-block;
	line-height: 1;
	color: rgba($color-text, .85);
}
kbd {
	border: 1px solid rgba(0, 0, 0, .1);
}
sub,
sup {
    font-size: x-small;
	line-height: 0;
	margin-left: 1rem/4;
	position: relative;
}
sup {
	top: 0;
    vertical-align: super;
}
sub {
	bottom: 1px;
    vertical-align: sub;
}

// Preformatted
pre, code, samp, var, kbd {
	font-family: $monospace-font-family;
}
pre, code, samp, var, kbd, mark {
	font-size: 87.5%;
}
pre,
pre code {
    background: #f8f8f8;
	padding: 0;
	top: 0;
    display: block;
    line-height: $base-line;
    color: rgba($color-text, .85);
	overflow: none;
	white-space: pre-wrap;
}
pre {
    padding: 1rem;
}

// Figure
figcaption {
	opacity: .6;
}
figure figcaption {
    position: relative;
    top: -1rem/2;
}
figure pre {
    background: none;
    border: 1px solid rgba(0, 0, 0, .1);
    border-radius: 4px;
}
figure {
    & .video-container,
    & pre {
        margin-bottom: $text-margin-bottom/2;
    }
}

// Modifiers
ul.unstyled {
    & {
        margin-left: 0;
    }
    &,
    & ul {
        list-style: none;
    }
}
.monospace {
   font-family: $monospace-font-family;
}
.upper {
    text-transform: uppercase;
}
.lower {
    text-transform: lowercase;
}
.italic {
    font-style: italic !important;
}
.strong {
    font-weight: bold !important;
}
.normal {
    font-weight: normal !important;
}
.muted {
    opacity: .55;
}
a.muted {
    color: $color-text;
}
a.muted:hover {
    opacity: 1;
}
.small {
	font-size: $font-size-small;
}
.end {
    margin-bottom: 0 !important;
}
.nowrap,
.nowrap td {
	white-space: nowrap;
}

// Alignment
.tal,
.text-left {
	text-align: left;
}
.tac,
.text-center {
	text-align: center;
}
.tar,
.text-right {
	text-align: right;
}

// Text Columns
.columns-2,
.columns-3,
.columns-4 {
     column-gap: $text-margin-bottom;
}

.columns-2 { column-count: 2; }
.columns-3 { column-count: 3; }
.columns-4 { column-count: 4; }

// Group
.group {
	@include clearfix;
}

// Flex
.flex {
    @include flex;
}
@include breakpoint(sm) {
    .flex-column-sm {
        @include flex-items-column;
    }
    .flex-w100-sm {
        @include flex-item-width(100%);
    }
}

// Visibility
.invisible {
	visibility: hidden;
}
.visible {
	visibility: visible;
}

// Display
.display-block {
    display: block;
}
.hide {
	display: none !important;
}
@include breakpoint(sm) {
	.hide-sm {
		display: none !important;
	}
}
@include breakpoint($min: $sm) {
    .show-sm {
    	display: none !important;
	}
}

// Print
@media print {
	.hide-print {
		display: none !important;
	}
	.show-print {
		display: block !important;
	}
}

// NoScroll
.no-scroll {
	overflow: hidden;
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100% !important;
}

// ScrollbarMeasure
.scrollbar-measure {
	position: absolute;
	top: -9999px;
	width: 50px;
	height: 50px;
	overflow: scroll;
}

// Responsive embedded objects
.video-container {
	height: 0;
	padding-bottom: 56.25%; // ratio 16:9
	position: relative;
	margin-bottom: $text-margin-bottom;
	& iframe,
	& object,
	& embed {
		position: absolute;
		top: 0;
		left: 0;
		width: 100% !important;
		height: 100% !important;
	}
}

// Close
.close {

    display: inline-block;
    min-height: 16px;
    min-width: 16px;
    line-height: 16px;
    vertical-align: middle;
    text-align: center;
    font-size: 12px;
    opacity: .6;

    &:hover {
        opacity: 1;
    }
    &.white {
        color: #fff;
    }
}

// Caret
.caret {
    display: inline-block;
}
.button {
    & .caret {
        margin-right: -8px;
    }
}

// Overlay
.overlay {
    position: fixed;
    // z-index: $z-over-control;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    // background-color: $overlay-background-color;

    & > .close {
        position: fixed;
        top: 1rem;
        right: 1rem;
    }
}