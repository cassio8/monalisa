// GRID
// ============================================================================
$grid-columns: 12 !default;
$grid-gutter: 2% !default;


// BREAKPOINTS
// ============================================================================
$xs: 480px !default;
$sm: 768px !default;
$md: 992px !default;
$lg: 1200px !default;


// COLORS
// ============================================================================

@mixin breakpoint($min: 0, $max: 0) {

    $type: type-of($min);

    @if $type == string
    {
        @if $min == sm
        {
            @media (max-width: $sm) { @content; }
        }
        @else if $min == md
        {
            @media (min-width: $sm) and (max-width: $md) { @content; }
        }
        @else if $min == lg
        {
            @media (min-width: $lg) { @content; }
        }
    }
    @else if $type == number
    {
        $query: "all" !default;
        @if $min != 0 and $max != 0 { $query: "(min-width: #{$min}) and (max-width: #{$max})"; }
        @else if $min != 0 and $max == 0 { $query: "(min-width: #{$min})"; }
        @else if $min == 0 and $max != 0 { $query: "(max-width: #{$max})"; }
        @media #{$query} { @content; }
    }
}
// display
@mixin flex {
	display: flex;
}

// basis
@mixin flex-basis($width) {
	flex-basis: $width;
}

// items wrap
@mixin flex-items-wrap {
	flex-wrap: wrap;
}

// items nowrap
@mixin flex-items-nowrap {
	flex-wrap: nowrap;
}

// items row
@mixin flex-items-row {
    flex-direction: row;
}

// items columns
@mixin flex-items-column {
    flex-direction: column;
}

// items left
@mixin flex-items-left {
    justify-content: flex-start;
}

// items right
@mixin flex-items-right {
    justify-content: flex-end;
}

// items center
@mixin flex-items-center {
	justify-content: center;
}

// items between
@mixin flex-items-space-between {
	justify-content: space-between;
}

// items around
@mixin flex-items-space-around {
	justify-content: space-around;
}

// items vertical top
@mixin flex-items-top {
    align-items: flex-start;
}

// items vertical middle
@mixin flex-items-middle {
	align-items: center;
}

// items vertical bottom
@mixin flex-items-bottom {
    align-items: flex-end;
}

// item grow
@mixin flex-item-grow($grow: 0) {
    flex-grow: $grow;
}


// item auto
@mixin flex-item-auto {
    flex: auto;
}

// item one
@mixin flex-item-one {
    flex: 1;
}

// item shrink
@mixin flex-item-shrink($num: 0) {
	flex-shrink: $num;
}

// item width
@mixin flex-item-width($width) {
	flex: 0 0 $width;

	@include breakpoint(sm) {
        flex: 0 0 100% !important;
    }
}
// Make Row
@mixin grid-row {
    @include flex;
    @include flex-items-row;
    @include flex-items-wrap;

    @include breakpoint(sm) {
        @include flex-items-column;
        @include flex-items-nowrap;
    }
}

// Generate Columns
@mixin generate-grid-columns {

    @for $i from 1 through $grid-columns
    {
        ._col-#{$i} {
            width: 100% / $grid-columns * $i;
        }
        ._offset-#{$i} {
            $width: 100% / $grid-columns * $i;
            margin-left: $width;
        }

    }

    ._gutters {
        @for $i from 1 through $grid-columns
        {
            & > ._col-#{$i} {
                $width: 100% / $grid-columns * $i;
                width: calc(#{$width} - #{$grid-gutter});
            }
            & > ._offset-#{$i} {
                $width: 100% / $grid-columns * $i;
                margin-left: calc(#{$width} + #{$grid-gutter}) !important;
            }
        }
    }
}


// Grid Media Columns
@mixin grid-media-columns($num) {

	-webkit-column-count: $num;
	-moz-column-count: $num;
	column-count: $num;

	-webkit-column-gap: $grid-gutter;
	-moz-column-gap: $grid-gutter;
	column-gap: $grid-gutter;

	& > div {
		display: inline-block;
		width: 100%;
	}

    @include breakpoint(sm) {
		-webkit-column-count: 1;
		-moz-column-count: 1;
		column-count: 1;
    }
}
// Grid Row
.Row {
    @include grid-row;

    // Gutters
    &._gutters,
    &._gutters > .Row {
        margin-left: -$grid-gutter;

        @include breakpoint(sm) {
            margin-left: 0;
        }

        & > .col {
            margin-left: $grid-gutter;

            @include breakpoint(sm) {
                margin-left: 0;
            }
        }
    }
    &._around {
        @include flex-items-space-around;
    }
    &._between {
        @include flex-items-space-between;
    }
    &._auto {
        & .col {
            flex: 1 1 0%;
        }
    }
}

// Grid Columns
@include generate-grid-columns;

// Offset
[class^='_offset-'],
[class*=' _offset-'] {
    @include breakpoint(sm) {
        margin-left: 0;
    }
}

// Ordering
._first    { order: -1; }
._last     { order: 1;  }

@include breakpoint(sm) {
    .Row {
        & .col {
            margin-left: 0;
            width: 100%;
        }
    }
    ._first-sm { order: -1; }
    ._last-sm  { order: 1;  }
}
// http://meyerweb.com/eric/tools/css/reset/
//   v2.0 | 20110126
//   License: none (public domain)

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    font: inherit;
    vertical-align: baseline;
}
// HTML5 display-role reset for older browsers
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
    display: block;
}
body {
    line-height: 1;
}
blockquote, q {
    quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
    content: '';
    content: none;
}
table {
    border-collapse: collapse;
    border-spacing: 0;
}

img { display: block; }
a img { border:none } /* Gets rid of IE's blue borders */
textarea {resize: none;}
input:focus,
select:focus,
textarea:focus,
button:focus {
    outline: none;
}


// MONALISA
* {
    outline: 0;
    -webkit-font-smoothing: antialiased;
    -webkit-overflow-scrolling: touch;
}
*,
:after,
:before{
    box-sizing: border-box;
}
html,
body {
    overflow-x: hidden;
}
html, body, div, article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
    position: relative;
}
img,
video,
audio {
    max-width: 100%;
}
img,
video {
    height: auto;
}
svg {
    max-height: 100%;
}
::-moz-focus-inner {
    border: 0;
    padding: 0;
}
input[type="radio"],
input[type="checkbox"] {
    vertical-align: middle;
    position: relative;
    bottom: 0.15rem;
    font-size: 115%;
    margin-right: 3px;
}
input[type="search"] {
    -webkit-appearance: textfield;
}
input[type="search"]::-webkit-search-decoration,
input[type="search"]::-webkit-search-cancel-button {
    -webkit-appearance: none;
}